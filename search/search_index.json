{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"UI5 Spreadsheet Upload Component","text":"<p>This component provides functionality for the bulk upload of data and the quick creation of records, with support for standard identification. Its use is independent of the backend, OData version, and Fiori scenario. Importing data is achieved by reading Spreadsheet files and utilizing standard digital APIs. The component does not submit the file itself but instead submits the data extracted from the Spreadsheet files. Its integration is designed to be as simple as possible, ideally requiring no configuration.</p> <p>Get Started Live Demo</p> <p>For information about the currently supported OData and UI5 Versions, click here. A quick integration tutorial for this component is available on YouTube here.</p>"},{"location":"#feature-overview","title":"Feature Overview","text":"<ul> <li>Supports upload from List Report/Object Page in Fiori Elements with or without draft</li> <li>Usable across all Fiori scenarios (Fiori Elements, Freestyle, OpenUI5, V2/V4)</li> <li>Includes several frontend checks</li> <li>Capability to download a pre-generated Spreadsheet template</li> <li>Extension Points for uploading to App or sending to the backend</li> <li>Supports multiversion namespace in Fiori Launchpad</li> <li>Provides multilanguage support (DE, EN, ES, FR, HI, IT, JA, ZH)</li> <li>Option to send to Backend in batch or single requests (batch size configurable)</li> <li>Standalone Mode (upload to app without sending to backend)</li> <li>Functionality to preview uploaded data</li> <li>Automatic draft activation</li> <li>Button control for simplified integration</li> <li>Generator for immediate integration</li> </ul>"},{"location":"#support","title":"Support","text":"<p>For discussions about the suitability of the component for your use case, you can schedule an appointment here free of charge.</p> <p>If you encounter implementation issues or bugs, you can open an issue here. For urgent assistance or special requirements, please schedule an appointment here at a fixed rate.</p>"},{"location":"#live-demo","title":"Live Demo","text":"<p>You can try this component live at: https://livedemo.spreadsheet-importer.com/</p> <p>The demo app uses OData V4, UI5 version 1.108, and a CAP backend. Data is reset every hour on the hour.</p>"},{"location":"#blogs","title":"Blogs","text":"<p>Find a selection of blog posts about this control:</p> <ul> <li>Simplifying Spreadsheet Upload in Fiori Elements: The Open Source and Easy-to-Use UI5 Custom Control</li> <li>Create a UI5 Custom Library with Versioning Using a Multi-Version Namespace</li> <li>Automating UI5 Testing with GitHub Actions and wdi5 in Multiple Scenarios</li> <li>Load Data from a Spreadsheet File in UI5 and Display the Data in a Table with this Open Source Component</li> </ul>"},{"location":"pages/APIReference/","title":"API Reference","text":""},{"location":"pages/APIReference/#class-spreadsheetimporter-component","title":"class spreadsheetimporter Component","text":""},{"location":"pages/APIReference/#overview","title":"Overview","text":"<p>The <code>spreadsheetimporter</code> component provides a way to import data from a spreadsheet into a table in the UI Builder application.</p>"},{"location":"pages/APIReference/#constructor","title":"Constructor","text":"<pre><code>createComponent({\n    usage: \"spreadsheetImporter\",\n    async: true,\n    componentData: {\n        context: this,\n        tableId?,\n        ...OTHER_OPTIONS\n      },\n});\n</code></pre>"},{"location":"pages/APIReference/#properties","title":"Properties","text":"<p>more info see Configuration</p>"},{"location":"pages/APIReference/#events","title":"Events","text":"<p>more info see Events</p> Event Description <code>preFileProcessing</code> Execute custom logic before processing the spreadsheet file starts <code>checkBeforeRead</code> Check data before it is uploaded to the UI5 <code>changeBeforeCreate</code> Change data before it is sent to the backend <code>requestCompleted</code> Event when the request is completed <code>uploadButtonPress</code> Fired when the <code>Upload</code> button is pressed, possible to prevent data from being sent to the backend"},{"location":"pages/APIReference/#methods","title":"Methods","text":""},{"location":"pages/APIReference/#openspreadsheetuploaddialog","title":"openSpreadsheetUploadDialog","text":"<p>Opens the spreadsheet upload dialog.</p>"},{"location":"pages/APIReference/#usage","title":"Usage","text":"<p>You can use this method to open the spreadsheet upload dialog after creating the component. Optionally, you can pass the <code>options</code> object to customize the dialog.</p>"},{"location":"pages/APIReference/#sample-code","title":"Sample Code","text":"<pre><code>const options = {\n    context: this,\n    tableId: \"ui.v4.ordersv4fe::OrdersObjectPage--fe::table::Shipping::LineItem-innerTable\"\n   }\nthis.spreadsheetUploadTableShipping = await this.editFlow.getView()\n    .getController()\n    .getAppComponent()\n    .createComponent({\n    usage: \"spreadsheetImporter\",\n    async: true\n    });\nthis.spreadsheetUploadTableShipping.setBatchSize(500)\nthis.spreadsheetUploadTableShipping.openSpreadsheetUploadDialog(options);\n</code></pre>"},{"location":"pages/APIReference/#addarraytomessages","title":"addArrayToMessages","text":"<p>Adds an array of messages inside a event.</p>"},{"location":"pages/APIReference/#usage_1","title":"Usage","text":"<p>You can use this method to add an array of messages to the event. The messages will be displayed in the error dialog after the execution of the event.</p>"},{"location":"pages/APIReference/#sample-code_1","title":"Sample Code","text":"<pre><code>this.spreadsheetUpload.attachCheckBeforeRead(function(event) {\n    // example\n    const sheetdata = event.getParameter(\"sheetData\");\n    let errorArray = [];\n    for (const [index, row] of sheetData.entries()) {\n        // Check for invalid price\n        for (const key in row) {\n            if (key.endsWith(\"[price]\") &amp;&amp; row[key].rawValue &gt; 100) {\n                const error = {\n                    title: \"Price too high (max 100)\",\n                    row: index + 2,\n                    group: true,\n                    rawValue: row[key].rawValue,\n                    ui5type: \"Error\"\n                };\n                errorArray.push(error);\n            }\n        }\n    }\n    event.getSource().addArrayToMessages(errorArray);\n}, this);\n</code></pre>"},{"location":"pages/APIReference/#getmessages","title":"getMessages","text":"<p>Returns the messages array.</p>"},{"location":"pages/APIReference/#usage_2","title":"Usage","text":"<p>You can use this method to get the messages array from the message handler.</p>"},{"location":"pages/Button/","title":"Button Control","text":""},{"location":"pages/Button/#button-in-component","title":"Button in Component","text":"<p>The usage of the UIComponent enables the possibility to return a button with the usage of a ComponentContainer. This has the big advantage that no separate dependency has to be installed, and a button for spreadsheet upload can be integrated very easily.</p> <p>You can also use the button in Fiori Elements applications within a section of an object page (see Including Reuse Components on an Object Page).</p>"},{"location":"pages/Button/#requirements","title":"Requirements","text":"<ul> <li>Node.js Version v16.18.0, v18.12.0, or higher  </li> <li>npm Version v8.0.0 or higher</li> <li>UI5 CLI v3.0.0 or higher</li> </ul>"},{"location":"pages/Button/#getting-started","title":"Getting started","text":"<p>1. Install from npm</p> <pre><code>npm install ui5-cc-spreadsheetimporter\n</code></pre> <p>2. Add <code>resourceRoots</code> to your <code>manifest.json</code> under <code>sap.ui5</code></p> <p>\u26a0\ufe0f You must always keep your <code>ui5-cc-spreadsheetimporter</code> and button version up to date here when updating the module.</p> <p>\u26a0\ufe0f The <code>resourceRoots</code> path \"./thirdparty/customcontrol/spreadsheetimporter/v1_4_2\" changed from version 0.34.0 to lowercase. Please make sure to use the correct path.</p> <pre><code>\"resourceRoots\": {\n    \"cc.spreadsheetimporter.v1_4_2\": \"./thirdparty/customcontrol/spreadsheetimporter/v1_4_2\"\n}\n</code></pre> <p>3. Add <code>components</code> to your <code>manifest.json</code> under <code>sap.ui5.dependencies</code></p> <p>This is optional and preloads the component on startup of the application.  </p> <p>\u26a0\ufe0f You must always keep your <code>ui5-cc-spreadsheetimporter</code> version up to date here when updating the module.</p> <pre><code>\"dependencies\": {\n  \"minUI5Version\": \"1.108.30\",\n  \"libs\": {\n    \"sap.m\": {},\n    \"sap.ui.core\": {},\n    \"sap.f\": {},\n    \"sap.ui.table\": {}\n  },\n  \"components\": {\n    \"cc.spreadsheetimporter.v1_4_2\": {}\n  }\n}\n</code></pre> <p>4. Add <code>componentUsages</code> to your <code>manifest.json</code> under <code>sap.ui5</code></p> <p>\u26a0\ufe0f You must always keep your <code>ui5-cc-spreadsheetimporter</code> version up to date here when updating the module.</p> <pre><code>\"componentUsages\": {\n    \"spreadsheetImporter\": {\n        \"name\": \"cc.spreadsheetimporter.v1_4_2\"\n    }\n}\n</code></pre> <p>5. Add the namespace <code>core</code> to your XML View</p> <pre><code>&lt;mvc:View controllerName=\"ui.v2.ordersv2freestylenondraft.controller.UploadToTable\"\n  xmlns=\"sap.m\"\n  xmlns:semantic=\"sap.f.semantic\"\n  xmlns:mvc=\"sap.ui.core.mvc\"\n  xmlns:core=\"sap.ui.core\"&gt;\n...\n&lt;/mvc:View&gt;\n</code></pre> <p>6. Add the <code>core:ComponentContainer</code> control to your view.</p> <pre><code>&lt;core:ComponentContainer width=\"100%\" \nusage=\"spreadsheetImporter\" propagateModel=\"true\" \nasync=\"true\"/&gt;\n</code></pre>"},{"location":"pages/Button/#define-configuration-options","title":"Define Configuration Options","text":"<p>You can set configuration options for the spreadsheet importer in the <code>settings</code> property of the <code>core:ComponentContainer</code> control. For special configuration options for the <code>ComponantContainer</code>, see Configuration.</p> <pre><code>&lt;core:ComponentContainer width=\"100%\" \nusage=\"spreadsheetImporter\" propagateModel=\"true\" async=\"true\" \nsettings=\"{\n  standalone:true,\n  columns: ['product_ID', 'username'],\n  componentContainerData:{\n    uploadButtonPress:'uploadButtonPress',\n    buttonText:'Excel Upload'\n    }\n  }\" /&gt;\n</code></pre>"},{"location":"pages/Button/#example-app","title":"Example App","text":""},{"location":"pages/Button/#freestyle-odata-v2","title":"Freestyle OData V2","text":"<p>XML View: Detail.view.xml Controller: Detail.controller.js</p>"},{"location":"pages/Button/#freestyle-odata-v2-standalone","title":"Freestyle OData V2 Standalone","text":"<p>XML View: UploadToTable.view.xml Controller: UploadToTable.controller.js</p>"},{"location":"pages/Button/#including-reuse-components-on-an-object-page","title":"Including Reuse Components on an Object Page","text":"<p>You can also use the button in Fiori Elements applications within a section of an object page. You can define this in the <code>manifest.json</code> under <code>sap.ui.generic.app</code> in the <code>pages</code> property.</p> <p>The configuration is documented in the UI5 documentation.</p> <p>A sample configuration can be found in the manifest.json of the OData V4 Fiori Elements app</p> <pre><code>\"body\": {\n  \"sections\": {\n    \"customSectionReuse\": {\n      \"title\": \"Spreadsheet Upload\",\n      \"embeddedComponent\": {\n        \"name\": \"cc.spreadsheetimporter.v1_4_2\",\n        \"settings\": {\n          \"tableId\": \"ui.v4.ordersv4fe::OrdersObjectPage--fe::table::Items::LineItem-innerTable\"\n        }\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"pages/Button/#screenshot","title":"Screenshot","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/","title":"Changelog","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#142-2024-10-18","title":"1.4.2 (2024-10-18)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes","title":"Bug Fixes","text":"<ul> <li>preview did not show all columns (#638) (eca1534)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#141-2024-09-21","title":"1.4.1 (2024-09-21)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_1","title":"Bug Fixes","text":"<ul> <li>add <code>nl</code> language to manifest (#633) (c9ea8ab)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#140-2024-09-18","title":"1.4.0 (2024-09-18)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features","title":"Features","text":"<ul> <li>new language dutch (LLM translated) (#631) (f4a7fae)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#130-2024-09-16","title":"1.3.0 (2024-09-16)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features_1","title":"Features","text":"<ul> <li>new parameter <code>bindingCustom</code> (#628) (935ea47)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_2","title":"Bug Fixes","text":"<ul> <li>in V4 context check if it is possible to execute with <code>editFlow</code> (#630) (c5701a9)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#122-2024-09-10","title":"1.2.2 (2024-09-10)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_3","title":"Bug Fixes","text":"<ul> <li>update <code>SheetJS</code> dependency to 0.20.3 (#626) (58000d7)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#121-2024-09-05","title":"1.2.1 (2024-09-05)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_4","title":"Bug Fixes","text":"<ul> <li>get odata version from binding instead of context (#618) (cf1f3a4)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#120-2024-08-14","title":"1.2.0 (2024-08-14)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features_2","title":"Features","text":"<ul> <li>new event <code>preFileProcessing</code> (#612) (966c3b1)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_5","title":"Bug Fixes","text":"<ul> <li><code>Edm.DateTimeOffset</code> parsing with and without precision (#603) (6649d53)</li> <li>force refresh only for v2 and when refresh failed (#596) (6f27348)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#111-2024-06-18","title":"1.1.1 (2024-06-18)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_6","title":"Bug Fixes","text":"<ul> <li>dialog is blocking navigation in FE scenarios (#579) (5a0b05d)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#110-2024-06-13","title":"1.1.0 (2024-06-13)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features_3","title":"Features","text":"<ul> <li>new option <code>excludeColumns</code> (#575) (a639b02)</li> <li>parse <code>Edm.Time</code> when excel data is text (#573) (cfaeace)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#100-2024-05-23","title":"1.0.0 (2024-05-23)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#breaking-changes","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>release 1.0.0</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features_4","title":"Features","text":"<ul> <li>new language portuguese by LLM translation (#553) (76d246c)</li> <li>release 1.0.0 (345b82f)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_7","title":"Bug Fixes","text":"<ul> <li>dialog margin in <code>sapUiSizeCozy</code> mode (#562) (4104fb9)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0341-2024-05-08","title":"0.34.1 (2024-05-08)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_8","title":"Bug Fixes","text":"<ul> <li>add seconds when parsing odata time (#549) (b5f69bc)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0340-2024-05-08","title":"0.34.0 (2024-05-08)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#breaking-changes_1","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>enable packaged deployment (#547) (6d3450b)</li> </ul> <p>because of a bug, it is not possible to do a packaged central deployment of bug in the abap system. The Bug was fixed as described in #490, but still relevant in older ABAP Systems. To make things easier and make the packaged central deployment possible at all, it is necessary to add the version to the metadata name and make the resources path lowercase because abap system can\u00b4t handle camel case.  </p>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#new-metadata-name","title":"New metadata name","text":"<pre><code>ui5-cc-spreadsheetimporter-v0-34-0\n</code></pre>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#new-lowercase-resourceroots-path","title":"New lowercase resourceRoots path","text":"<p>Instead of <code>thirdparty/customControl/spreadsheetImporter/v0_34_0</code> it is <code>thirdparty/customcontrol/spreadsheetimporter/v0_34_0</code></p>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0334-2024-04-19","title":"0.33.4 (2024-04-19)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_9","title":"Bug Fixes","text":"<ul> <li>make <code>fireEventAsync</code> more stable (#534) (1ab4cd2)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0333-2024-04-18","title":"0.33.3 (2024-04-18)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_10","title":"Bug Fixes","text":"<ul> <li>design improvements (#527) (af21d7b)</li> <li>make sure payload in <code>changeBeforeCreate</code> is used (#528) (89f3292)</li> <li>reset context on server error (#525) (d1dd033)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0332-2024-04-08","title":"0.33.2 (2024-04-08)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_11","title":"Bug Fixes","text":"<ul> <li>special case for Edm.Byte for OData V2 (#519) (36b5f7c)</li> <li>update SheetJS to 0.20.2 (#521) (29301d2)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0331-2024-02-29","title":"0.33.1 (2024-02-29)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_12","title":"Bug Fixes","text":"<ul> <li>parse Edm.Byte and Edm.SByte (#506) (1b50aef)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0330-2024-02-23","title":"0.33.0 (2024-02-23)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features_5","title":"Features","text":"<ul> <li>possibility to overwrite i18n texts (#501) (4c08ed7)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0320-2024-02-15","title":"0.32.0 (2024-02-15)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features_6","title":"Features","text":"<ul> <li>add drag&amp;drop to dialog to upload files (#496) (ea55361)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0316-2024-02-14","title":"0.31.6 (2024-02-14)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_13","title":"Bug Fixes","text":"<ul> <li>turn off <code>continue anyway</code> on error dialog after upload button press (#494) (fb82978)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0315-2024-02-05","title":"0.31.5 (2024-02-05)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_14","title":"Bug Fixes","text":"<ul> <li>make sure Edm.Date uses the correct date (#487) (934fe3b)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0314-2024-02-01","title":"0.31.4 (2024-02-01)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_15","title":"Bug Fixes","text":"<ul> <li>show error in standalone mode after upload button press (#480) (9348694)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0313-2024-01-30","title":"0.31.3 (2024-01-30)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_16","title":"Bug Fixes","text":"<ul> <li>preventDefault on event <code>uploadButtonPress</code> (#476) (4c6033e)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0312-2024-01-23","title":"0.31.2 (2024-01-23)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_17","title":"Bug Fixes","text":"<ul> <li>update sheetjs to 0.20.1 (#463) (16a2722)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0311-2024-01-03","title":"0.31.1 (2024-01-03)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_18","title":"Bug Fixes","text":"<ul> <li>string assignment using nullish coalescing operator (#450) (530fcbd)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0310-2024-01-02","title":"0.31.0 (2024-01-02)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features_7","title":"Features","text":"<ul> <li>add config for btp deployment with managed approuter (#419) (470b68f)</li> <li>new checks for maxLength and duplicate columns (#447) (7d47e28)</li> <li>new config to define columns in preview (#443) (b98db12)</li> <li>new option `createActiveEntity\u00b4 to directly create active entities (#438) (a3449f7)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_19","title":"Bug Fixes","text":"<ul> <li>check if ComponentContainerData is available (#445) (c484e42)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0300-2023-12-21","title":"0.30.0 (2023-12-21)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features_8","title":"Features","text":"<ul> <li>enable spreadsheet importer for ui5 v2 (#440) (763c2c7)</li> <li>new config to continue batch processing on errors (#441) (25dda51)</li> <li>new config to send the spreadsheet row to the backend (#439) (44af189)</li> <li>use events with async attached function s(#435) (2c95615)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0291-2023-12-16","title":"0.29.1 (2023-12-16)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_20","title":"Bug Fixes","text":"<ul> <li>add missing row number in excel log file (#421) (6b05df3)</li> <li>avoid error when annotation not found (#430) (a989e5f)</li> <li>better error handling on backend errors (#426) (7541ab9)</li> <li>sampleData only if defined (#428) (dfdacb1)</li> <li>use sample data in standalone mode (#429) (3b9b165)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0290-2023-10-30","title":"0.29.0 (2023-10-30)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features_9","title":"Features","text":"<ul> <li>new config to provide own template file (#406) (591e284)</li> <li>new config to skip columns check (#404) (6a14152)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_21","title":"Bug Fixes","text":"<ul> <li>add parsedData to CheckBeforeRead event (#407) (110933a)</li> <li>hide generateTemplate in standalone (#409) (b9172db)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0281-2023-10-18","title":"0.28.1 (2023-10-18)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_22","title":"Bug Fixes","text":"<ul> <li>add missing event requestCompleted to eventMethodMap (#389) (51f5c04)</li> <li>add xlsm add upload type (#395) (0ce65d1)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0280-2023-10-12","title":"0.28.0 (2023-10-12)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features_10","title":"Features","text":"<ul> <li>new event <code>requestCompleted</code> (#386) (81baaac)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0271-2023-10-10","title":"0.27.1 (2023-10-10)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_23","title":"Bug Fixes","text":"<ul> <li>preview (#382) (8eb8b28)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0270-2023-10-06","title":"0.27.0 (2023-10-06)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features_11","title":"Features","text":"<ul> <li>add sheet selector if multiple sheets in file (#376) (94de1b4)</li> <li>error report can be downloaded as spreadsheet file (#378) (7fc727e)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_24","title":"Bug Fixes","text":"<ul> <li>i18n date parser attribute (#380) (b0e8279)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0261-2023-09-30","title":"0.26.1 (2023-09-30)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_25","title":"Bug Fixes","text":"<ul> <li>event attachment of componentContainer (#372) (5f71366)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0260-2023-09-30","title":"0.26.0 (2023-09-30)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#breaking-changes_2","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>usage of UIComponent to return button (#370)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features_12","title":"Features","text":"<ul> <li>usage of UIComponent to return button (#370) (6ef0f46)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0254-2023-09-28","title":"0.25.4 (2023-09-28)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_26","title":"Bug Fixes","text":"<ul> <li>template generation in standalone mode (#368) (c0af0d9)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0253-2023-09-11","title":"0.25.3 (2023-09-11)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_27","title":"Bug Fixes","text":"<ul> <li>check for odata type config parameter (#361) (86706cc)</li> <li>use label in preview table (#359) (9a02b30)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0252-2023-09-06","title":"0.25.2 (2023-09-06)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_28","title":"Bug Fixes","text":"<ul> <li>readAllSheets Parameter fixed (#354) (88475fb)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0251-2023-09-06","title":"0.25.1 (2023-09-06)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_29","title":"Bug Fixes","text":"<ul> <li>close busy dialog on backend error (#348) (e1cc5e6)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0250-2023-09-06","title":"0.25.0 (2023-09-06)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features_13","title":"Features","text":"<ul> <li>add sheet name to payload  (#346) (4af5b47)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_30","title":"Bug Fixes","text":"<ul> <li>add missing event parameter for uploadButtonPress event (#344) (93b7613)</li> <li>make parameter optional (#341) (d52486d)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0240-2023-08-10","title":"0.24.0 (2023-08-10)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features_14","title":"Features","text":"<ul> <li>use odataType to create data for other entity (#334) (7330ebb)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0231-2023-08-03","title":"0.23.1 (2023-08-03)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_31","title":"Bug Fixes","text":"<ul> <li>enable usage of controller extensions (#330) (f767a5c)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0230-2023-08-03","title":"0.23.0 (2023-08-03)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features_15","title":"Features","text":"<ul> <li>add progress indicator for large files (#327) (3bcfc26)</li> <li>improve tablechooser (#326) (268a1a7)</li> <li>new TableChooser if multiple tables in view (#325) (bfe5096)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_32","title":"Bug Fixes","text":"<ul> <li>rename tableChooser to tableSelector (#328) (50b21c3)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0220-2023-07-12","title":"0.22.0 (2023-07-12)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features_16","title":"Features","text":"<ul> <li>new option, add your own <code>sampleData</code> (#318) (24cef4f)</li> <li>parse i18n texts from metadata (#319) (278447d)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_33","title":"Bug Fixes","text":"<ul> <li>continue on error did not work (#316) (5d1d55c)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0212-2023-07-03","title":"0.21.2 (2023-07-03)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_34","title":"Bug Fixes","text":"<ul> <li>update <code>ui5-tooling-transpile</code> to use types in apps (#301) (7e0a35c)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0211-2023-06-30","title":"0.21.1 (2023-06-30)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_35","title":"Bug Fixes","text":"<ul> <li>change texts when records are uploaded to app (#293) (13555fd)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0210-2023-06-28","title":"0.21.0 (2023-06-28)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#breaking-changes_3","title":"\u26a0 BREAKING CHANGES","text":"<p>The package was renamed from <code>ui5-cc-excelupload</code> to <code>ui5-cc-spreadsheetimporter</code>!  </p> <ul> <li>rename to spreadsheet importer (removing word <code>excel</code>) (#282)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features_17","title":"Features","text":"<ul> <li>rename to spreadsheet importer (removing word <code>excel</code>) (#282) (e661c3e)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0200-2023-06-27","title":"0.20.0 (2023-06-27)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features_18","title":"Features","text":"<ul> <li>added sample data to template including formats and option to hide it (#275) (3766049)</li> <li>export ts types and new ts sample app (#278) (46fbaee)</li> <li>option to define available options for user (#264) (e6abe2d)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0191-2023-06-19","title":"0.19.1 (2023-06-19)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_36","title":"Bug Fixes","text":"<ul> <li>improve error Message on table discovery (#270) (0215ba0)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0190-2023-06-10","title":"0.19.0 (2023-06-10)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features_19","title":"Features","text":"<ul> <li>add debugging option (#257) (61a5f3f)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0181-2023-06-09","title":"0.18.1 (2023-06-09)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_37","title":"Bug Fixes","text":"<ul> <li>removed check for nullable fields (#255) (f4b569a)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0180-2023-06-02","title":"0.18.0 (2023-06-02)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features_20","title":"Features","text":"<ul> <li>add new option to show backend error message (#236) (f2a38dd)</li> <li>show options menu for some configurations (#241) (8bfae76)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_38","title":"Bug Fixes","text":"<ul> <li>different format in float and integer for v4 (#240) (23b1b9a)</li> <li>improve handling of backend errors (#213) (5d06db6)</li> <li>send double as string value (#234) (799a3ef)</li> <li>use busy indicator on opening options menu (#242) (0151700)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0175-2023-05-22","title":"0.17.5 (2023-05-22)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_39","title":"Bug Fixes","text":"<ul> <li>add missing check on option \"skip checks mandatory field\" in v2 (#229) (6c7f53b)</li> <li>skip sap properties (#228) (69bbe03)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0174-2023-05-22","title":"0.17.4 (2023-05-22)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_40","title":"Bug Fixes","text":"<ul> <li>show raw value on parser error (#227) (50142bf)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0173-2023-05-20","title":"0.17.3 (2023-05-20)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_41","title":"Bug Fixes","text":"<ul> <li>remove popup in FE scenario when uploading (#223) (f7d12b3)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0172-2023-05-20","title":"0.17.2 (2023-05-20)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_42","title":"Bug Fixes","text":"<ul> <li>add missing Edm Types (Decimal, Integer) (#221) (7bda6d5)</li> <li>rename option to skip all metadata mandatory field checks (#220) (a7ac5e4)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0171-2023-05-20","title":"0.17.1 (2023-05-20)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_43","title":"Bug Fixes","text":"<ul> <li>messages are not a mandatory field (#217) (bc20e5c)</li> <li>parsing booleans (#219) (82777f9)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0170-2023-05-18","title":"0.17.0 (2023-05-18)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#breaking-changes_4","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>change API to add messages to Error Dialog (#211)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features_21","title":"Features","text":"<ul> <li>add option to hide the \"preview data\" button (#212) (65bcb5b)</li> <li>add option to set decimal seperator (#199) (ba4a4f2)</li> <li>add option to skip Fields with <code>Nullable=false</code> (#216) (28ded2d)</li> <li>change API to add messages to Error Dialog (#211) (a06ec4e)</li> <li>show faulty value in the error dialog (#197) (8e09745)</li> <li>warning when numbers are formatted in file (#205) (701b31e)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0164-2023-05-09","title":"0.16.4 (2023-05-09)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_44","title":"Bug Fixes","text":"<ul> <li>check on mandatory fields (#192) (05dbcc9)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0163-2023-05-09","title":"0.16.3 (2023-05-09)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_45","title":"Bug Fixes","text":"<ul> <li>correct check for mandatory fields (#190) (83a7d6f)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0162-2023-05-09","title":"0.16.2 (2023-05-09)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_46","title":"Bug Fixes","text":"<ul> <li>add check if no annotations are found (#188) (bd440bf)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0161-2023-05-08","title":"0.16.1 (2023-05-08)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_47","title":"Bug Fixes","text":"<ul> <li>remove empty line (ae7bce8)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0160-2023-05-08","title":"0.16.0 (2023-05-08)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features_22","title":"Features","text":"<ul> <li>add <code>continue on error</code> button in error dialog (#182) (40d7d28)</li> <li>add options menu for config (#183) (7533ba9)</li> <li>revert removal of option <code>fieldMatchType</code> (#157), new default <code>labelTypeBrackets</code> (#173) (7a91c19)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_48","title":"Bug Fixes","text":"<ul> <li>i18n language codes (#179) (851a50c)</li> <li>remove ids from options fragment (#184) (be2e947)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0150-2023-04-18","title":"0.15.0 (2023-04-18)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#breaking-changes_5","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>removal of option <code>fieldMatchType</code> (#157)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features_23","title":"Features","text":"<ul> <li>check for mandatory fields annotation (#162) (6c99324)</li> <li>removal of option <code>fieldMatchType</code> (#157) (4346e1b)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0141-2023-04-18","title":"0.14.1 (2023-04-18)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_49","title":"Bug Fixes","text":"<ul> <li>error message shown twice on listreport (#152) (d0a3d12)</li> <li>improve UX on upload dialog (#151) (4ca9e1f)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0140-2023-04-14","title":"0.14.0 (2023-04-14)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features_24","title":"Features","text":"<ul> <li>handle backend error (#110) (3abc24a)</li> <li>preview of data uploaded to app and row counter (#148) (fb57789)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0130-2023-04-13","title":"0.13.0 (2023-04-13)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features_25","title":"Features","text":"<ul> <li>add event <code>uploadButtonPress</code> (#143) (23b918c)</li> <li>new option to upload in standalone mode (#145) (ead496f)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0123-2023-04-11","title":"0.12.3 (2023-04-11)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_50","title":"Bug Fixes","text":"<ul> <li>enablement for V4 FPM (#135) (1bf89ba)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0122-2023-04-10","title":"0.12.2 (2023-04-10)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_51","title":"Bug Fixes","text":"<ul> <li>update correct versions in code (#124) (71f106e)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0121-2023-04-07","title":"0.12.1 (2023-04-07)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_52","title":"Bug Fixes","text":"<ul> <li>remove unused imports (#119) (2eea092)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0120-2023-04-04","title":"0.12.0 (2023-04-04)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features_26","title":"Features","text":"<ul> <li>add Support for OpenUI5 (#97) (9f1ed6c)</li> <li>including Sample App for OpenUI5 and wdi5 Tests</li> <li>improve checks for all Edm Types (#105) (dc91ee2)</li> <li>Documentation for the improved Error Handling can be found here</li> <li>improved checks on the data formats and error handling (#103) (801cfcb)</li> <li>Improvements for custom error handling. Documentation can be found here</li> <li>new automatically translated languages added (#107) (477e899)</li> <li>the english language was automatic translated to following languages: <code>Chinese</code>, <code>French</code>, <code>Spanish</code>, <code>Italien</code>, <code>Hindi</code>, <code>Japanese</code></li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0114-2023-03-27","title":"0.11.4 (2023-03-27)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_53","title":"Bug Fixes","text":"<ul> <li>namespace at manifest was not replaced correctly (#91) (f60c19b)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0113-2023-03-20","title":"0.11.3 (2023-03-20)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_54","title":"Bug Fixes","text":"<ul> <li>use attribute tableId to get tableObject (#84) (0860373)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0112-2023-03-18","title":"0.11.2 (2023-03-18)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_55","title":"Bug Fixes","text":"<ul> <li>missing check for active draft option (#81) (e15e2eb)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0111-2023-03-17","title":"0.11.1 (2023-03-17)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_56","title":"Bug Fixes","text":"<ul> <li>use batchSize even when payload has less  then 1000 lines (#77) (c0926d1)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0110-2023-03-17","title":"0.11.0 (2023-03-17)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features_27","title":"Features","text":"<ul> <li>new option <code>batchSizes</code> to slice batch calls to backend (#75) (8f7684f)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#0100-2023-03-12","title":"0.10.0 (2023-03-12)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#breaking-changes_6","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>use namespace with underscores (#72)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#091-2023-03-02","title":"0.9.1 (2023-03-02)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_57","title":"Bug Fixes","text":"<ul> <li>check for binding before open dialog (#62) (c1f545f)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#090-2023-02-18","title":"0.9.0 (2023-02-18)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features_28","title":"Features","text":"<ul> <li>check if all columns name in file match metadata (#57) (7c538a0)</li> <li>support for UI5 Tooling V3 (#47) (d9f52e9)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_58","title":"Bug Fixes","text":"<ul> <li>Align Dialogs more with Fiori Guidelines (#54) (4f74eeb)</li> <li>horizontal scrollbar in dialog on mobile view (#55) (3288a25)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#081-2023-02-10","title":"0.8.1 (2023-02-10)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_59","title":"Bug Fixes","text":"<ul> <li>remove scrollbar from dialog (#45) (bb1b197)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#080-2023-02-10","title":"0.8.0 (2023-02-10)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features_29","title":"Features","text":"<ul> <li>setup for central deployment abap (#41) (54bc904)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#070-2023-02-03","title":"0.7.0 (2023-02-03)","text":"<p>Breaking Changes</p> <p>Changes involving in the manifest and custom code implementation. See Documenation</p>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_60","title":"Bug Fixes","text":"<ul> <li>component-preload.js and componentUsages in examples apps (#40) (33c6e88)</li> <li>upload same file two times (#37), closes #36 (553e5a8)</li> <li>using component-preload.js (#31) (4b223bb)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features_30","title":"Features","text":"<ul> <li>add intial csv support (#33) (f7ec051)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#060-2023-01-14","title":"0.6.0 (2023-01-14)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_61","title":"Bug Fixes","text":"<ul> <li>open  dialog twice again (#20) (7a37483)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features_31","title":"Features","text":"<p>Created compatibility and wdi5 tests for List Report and Object Page in Draft Mode for OData V2 (Versions 108,96,84,71) and OData V4 (Versions 108,96,84) More info see Supported Versions</p> <ul> <li>compatibility/wdi5 tests with v2 FE 96/84/71 (3f010d9)</li> <li>support for v4 96/84 (#16) (109813f)</li> <li>working in Draft List Report V2/V4 (#17) (cc07d38)</li> <li>works in ListReport/ObjectPage V4/V2 and Freestyle V2(#10) (d9432d2)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#050-2023-01-04","title":"0.5.0 (2023-01-04)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features_32","title":"Features","text":"<ul> <li>init i18n (#8) (593b009)</li> <li>multiversion support (#6) (68aa9ca)</li> <li>works in ListReport/ObjectPage V4/V2, V4 FPM and Freestyle V2(#10) (d9432d2)</li> <li>new option for draft Activation (#10) (d9432d2)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#040-2022-12-23","title":"0.4.0 (2022-12-23)","text":"<p>Breaking Changes</p> <p>Changes involving in the manifest and custom code implementation. See Documenation</p>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features_33","title":"Features","text":"<ul> <li>multiversion support (#6) (68aa9ca)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#034-2022-12-09","title":"0.3.4 (2022-12-09)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_62","title":"Bug Fixes","text":"<ul> <li>change console output statement to debug (cd19150)</li> <li>Type \"Edm.DateTime parsed in false format (8fb6541)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features_34","title":"Features","text":"<ul> <li>add dedicated docs with mkdocs (#3) (77a6e06)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#033-2022-12-07","title":"0.3.3 (2022-12-07)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_63","title":"Bug Fixes","text":"<ul> <li>check did not work with fieldMatchType:label (dde0bf9)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features_35","title":"Features","text":"<ul> <li>convertion for date/time types before creation (65823aa)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#032-2022-12-07","title":"0.3.2 (2022-12-07)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features_36","title":"Features","text":"<ul> <li>new parsing type of  column header (713e8a1)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#031-2022-12-06","title":"0.3.1 (2022-12-06)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_64","title":"Bug Fixes","text":"<ul> <li>xlsx not in build (e3296c0)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#030-2022-12-06","title":"0.3.0 (2022-12-06)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#breaking-changes_7","title":"Breaking Changes","text":"<ul> <li>Move to reuse component, change in implementation</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#022-2022-12-01","title":"0.2.2 (2022-12-01)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_65","title":"Bug Fixes","text":"<ul> <li>change path, only dist folder for app build (300e2c5)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#021-2022-12-01","title":"0.2.1 (2022-12-01)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#bug-fixes_66","title":"Bug Fixes","text":"<ul> <li>remove wrong apostrophes from string (b1d31dc)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#020-2022-11-30","title":"0.2.0 (2022-11-30)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#features_37","title":"Features","text":"<ul> <li>check for mandatory fields 0520ada</li> <li>try get file name from v4 model fa9a349</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#012-2022-11-29","title":"0.1.2 (2022-11-29)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#011-2022-11-29","title":"0.1.1 (2022-11-29)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTER/#010-2022-11-29","title":"0.1.0 (2022-11-29)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/","title":"Changelog","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#dependencies","title":"Dependencies","text":"<ul> <li>The following workspace dependencies were updated</li> <li>dependencies<ul> <li>ui5-cc-spreadsheetimporter bumped from 0.13.0 to 0.14.0</li> </ul> </li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#dependencies_1","title":"Dependencies","text":"<ul> <li>The following workspace dependencies were updated</li> <li>dependencies<ul> <li>ui5-cc-spreadsheetimporter bumped from 0.14.0 to 0.14.1</li> </ul> </li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#dependencies_2","title":"Dependencies","text":"<ul> <li>The following workspace dependencies were updated</li> <li>dependencies<ul> <li>ui5-cc-spreadsheetimporter bumped from 0.16.0 to 0.16.1</li> </ul> </li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#dependencies_3","title":"Dependencies","text":"<ul> <li>The following workspace dependencies were updated</li> <li>dependencies<ul> <li>ui5-cc-spreadsheetimporter bumped from 0.16.1 to 0.16.2</li> </ul> </li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#dependencies_4","title":"Dependencies","text":"<ul> <li>The following workspace dependencies were updated</li> <li>dependencies<ul> <li>ui5-cc-spreadsheetimporter bumped from 0.16.2 to 0.16.3</li> </ul> </li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#dependencies_5","title":"Dependencies","text":"<ul> <li>The following workspace dependencies were updated</li> <li>dependencies<ul> <li>ui5-cc-spreadsheetimporter bumped from 0.16.3 to 0.16.4</li> </ul> </li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#dependencies_6","title":"Dependencies","text":"<ul> <li>The following workspace dependencies were updated</li> <li>dependencies<ul> <li>ui5-cc-spreadsheetimporter bumped from 0.17.0 to 0.17.1</li> </ul> </li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#dependencies_7","title":"Dependencies","text":"<ul> <li>The following workspace dependencies were updated</li> <li>dependencies<ul> <li>ui5-cc-spreadsheetimporter bumped from 0.17.2 to 0.17.3</li> </ul> </li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#dependencies_8","title":"Dependencies","text":"<ul> <li>The following workspace dependencies were updated</li> <li>dependencies<ul> <li>ui5-cc-spreadsheetimporter bumped from 0.17.3 to 0.17.4</li> </ul> </li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#dependencies_9","title":"Dependencies","text":"<ul> <li>The following workspace dependencies were updated</li> <li>dependencies<ul> <li>ui5-cc-spreadsheetimporter bumped from 0.17.4 to 0.17.5</li> </ul> </li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#dependencies_10","title":"Dependencies","text":"<ul> <li>The following workspace dependencies were updated</li> <li>dependencies<ul> <li>ui5-cc-spreadsheetimporter bumped from 0.18.0 to 0.18.1</li> </ul> </li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#dependencies_11","title":"Dependencies","text":"<ul> <li>The following workspace dependencies were updated</li> <li>dependencies<ul> <li>ui5-cc-spreadsheetimporter bumped from 0.19.0 to 0.19.1</li> </ul> </li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#dependencies_12","title":"Dependencies","text":"<ul> <li>The following workspace dependencies were updated</li> <li>dependencies<ul> <li>ui5-cc-spreadsheetimporter bumped from 0.21.0 to 0.21.1</li> </ul> </li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#dependencies_13","title":"Dependencies","text":"<ul> <li>The following workspace dependencies were updated</li> <li>dependencies<ul> <li>ui5-cc-spreadsheetimporter bumped from 0.22.0 to 0.23.0</li> </ul> </li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#dependencies_14","title":"Dependencies","text":"<ul> <li>The following workspace dependencies were updated</li> <li>dependencies<ul> <li>ui5-cc-spreadsheetimporter bumped from 0.23.0 to 0.23.1</li> </ul> </li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#dependencies_15","title":"Dependencies","text":"<ul> <li>The following workspace dependencies were updated</li> <li>dependencies<ul> <li>ui5-cc-spreadsheetimporter bumped from 0.23.1 to 0.24.0</li> </ul> </li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#dependencies_16","title":"Dependencies","text":"<ul> <li>The following workspace dependencies were updated</li> <li>dependencies<ul> <li>ui5-cc-spreadsheetimporter bumped from 0.25.1 to 0.25.2</li> </ul> </li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#dependencies_17","title":"Dependencies","text":"<ul> <li>The following workspace dependencies were updated</li> <li>dependencies<ul> <li>ui5-cc-spreadsheetimporter bumped from 0.25.2 to 0.25.3</li> </ul> </li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#dependencies_18","title":"Dependencies","text":"<ul> <li>The following workspace dependencies were updated</li> <li>dependencies<ul> <li>ui5-cc-spreadsheetimporter bumped to 0.25.4</li> </ul> </li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#0111-2023-09-06","title":"0.11.1 (2023-09-06)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#bug-fixes","title":"Bug Fixes","text":"<ul> <li>close busy dialog on backend error (#348) (e1cc5e6)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#dependencies_19","title":"Dependencies","text":"<ul> <li>The following workspace dependencies were updated</li> <li>dependencies<ul> <li>ui5-cc-spreadsheetimporter bumped from 0.25.0 to 0.25.1</li> </ul> </li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#0110-2023-09-06","title":"0.11.0 (2023-09-06)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#features","title":"Features","text":"<ul> <li>add sheet name to payload  (#346) (4af5b47)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#bug-fixes_1","title":"Bug Fixes","text":"<ul> <li>add missing event parameter for uploadButtonPress event (#344) (93b7613)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#dependencies_20","title":"Dependencies","text":"<ul> <li>The following workspace dependencies were updated</li> <li>dependencies<ul> <li>ui5-cc-spreadsheetimporter bumped from 0.24.0 to 0.25.0</li> </ul> </li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#0100-2023-07-12","title":"0.10.0 (2023-07-12)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#features_1","title":"Features","text":"<ul> <li>new option, add your own <code>sampleData</code> (#318) (24cef4f)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#dependencies_21","title":"Dependencies","text":"<ul> <li>The following workspace dependencies were updated</li> <li>dependencies<ul> <li>ui5-cc-spreadsheetimporter bumped from 0.21.2 to 0.22.0</li> </ul> </li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#092-2023-07-03","title":"0.9.2 (2023-07-03)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#bug-fixes_2","title":"Bug Fixes","text":"<ul> <li>update <code>ui5-tooling-transpile</code> to use types in apps (#301) (7e0a35c)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#dependencies_22","title":"Dependencies","text":"<ul> <li>The following workspace dependencies were updated</li> <li>dependencies<ul> <li>ui5-cc-spreadsheetimporter bumped from 0.21.1 to 0.21.2</li> </ul> </li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#090-2023-06-28","title":"0.9.0 (2023-06-28)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#breaking-changes","title":"\u26a0 BREAKING CHANGES","text":"<p>The package was renamed from <code>ui5-cc-excelupload-button</code> to <code>ui5-cc-spreadsheetimporter-button</code>!  </p> <ul> <li>rename to spreadsheet importer (removing word <code>excel</code>) (#282)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#features_2","title":"Features","text":"<ul> <li>rename to spreadsheet importer (removing word <code>excel</code>) (#282) (e661c3e)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#dependencies_23","title":"Dependencies","text":"<ul> <li>The following workspace dependencies were updated</li> <li>dependencies<ul> <li>ui5-cc-spreadsheetimporter bumped from 0.20.0 to 0.21.0</li> </ul> </li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#080-2023-06-27","title":"0.8.0 (2023-06-27)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#features_3","title":"Features","text":"<ul> <li>added sample data to template including formats and option to hide it (#275) (3766049)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#dependencies_24","title":"Dependencies","text":"<ul> <li>The following workspace dependencies were updated</li> <li>dependencies<ul> <li>ui5-cc-spreadsheetimporter bumped from 0.19.1 to 0.20.0</li> </ul> </li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#070-2023-06-10","title":"0.7.0 (2023-06-10)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#features_4","title":"Features","text":"<ul> <li>add debugging option (#257) (61a5f3f)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#dependencies_25","title":"Dependencies","text":"<ul> <li>The following workspace dependencies were updated</li> <li>dependencies<ul> <li>ui5-cc-spreadsheetimporter bumped from 0.18.1 to 0.19.0</li> </ul> </li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#060-2023-06-02","title":"0.6.0 (2023-06-02)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#features_5","title":"Features","text":"<ul> <li>add new option to show backend error message (#236) (f2a38dd)</li> <li>show options menu for some configurations (#241) (8bfae76)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#bug-fixes_3","title":"Bug Fixes","text":"<ul> <li>set default text for button (#243) (5a314c0)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#dependencies_26","title":"Dependencies","text":"<ul> <li>The following workspace dependencies were updated</li> <li>dependencies<ul> <li>ui5-cc-spreadsheetimporter bumped from 0.17.5 to 0.18.0</li> </ul> </li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#052-2023-05-20","title":"0.5.2 (2023-05-20)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#bug-fixes_4","title":"Bug Fixes","text":"<ul> <li>rename option to skip all metadata mandatory field checks (#220) (a7ac5e4)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#dependencies_27","title":"Dependencies","text":"<ul> <li>The following workspace dependencies were updated</li> <li>dependencies<ul> <li>ui5-cc-spreadsheetimporter bumped from 0.17.1 to 0.17.2</li> </ul> </li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#050-2023-05-18","title":"0.5.0 (2023-05-18)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#breaking-changes_1","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>change API to add messages to Error Dialog (#211)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#features_6","title":"Features","text":"<ul> <li>add option to hide the \"preview data\" button (#212) (65bcb5b)</li> <li>add option to set decimal seperator (#199) (ba4a4f2)</li> <li>add option to skip Fields with <code>Nullable=false</code> (#216) (28ded2d)</li> <li>change API to add messages to Error Dialog (#211) (a06ec4e)</li> <li>warning when numbers are formatted in file (#205) (701b31e)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#dependencies_28","title":"Dependencies","text":"<ul> <li>The following workspace dependencies were updated</li> <li>dependencies<ul> <li>ui5-cc-spreadsheetimporter bumped from 0.16.4 to 0.17.0</li> </ul> </li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#040-2023-05-08","title":"0.4.0 (2023-05-08)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#features_7","title":"Features","text":"<ul> <li>add <code>continue on error</code> button in error dialog (#182) (40d7d28)</li> <li>revert removal of option <code>fieldMatchType</code> (#157), new default <code>labelTypeBrackets</code> (#173) (7a91c19)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#dependencies_29","title":"Dependencies","text":"<ul> <li>The following workspace dependencies were updated</li> <li>dependencies<ul> <li>ui5-cc-spreadsheetimporter bumped from 0.15.0 to 0.16.0</li> </ul> </li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#030-2023-04-18","title":"0.3.0 (2023-04-18)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#breaking-changes_2","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>removal of option <code>fieldMatchType</code> (#157)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#features_8","title":"Features","text":"<ul> <li>removal of option <code>fieldMatchType</code> (#157) (4346e1b)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#dependencies_30","title":"Dependencies","text":"<ul> <li>The following workspace dependencies were updated</li> <li>dependencies<ul> <li>ui5-cc-spreadsheetimporter bumped from 0.14.1 to 0.15.0</li> </ul> </li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#020-2023-04-13","title":"0.2.0 (2023-04-13)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#features_9","title":"Features","text":"<ul> <li>add event <code>uploadButtonPress</code> (#143) (23b918c)</li> <li>new option to upload in standalone mode (#145) (ead496f)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#dependencies_31","title":"Dependencies","text":"<ul> <li>The following workspace dependencies were updated</li> <li>dependencies<ul> <li>ui5-cc-spreadsheetimporter bumped from 0.12.3 to 0.13.0</li> </ul> </li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#010-2023-04-11","title":"0.1.0 (2023-04-11)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#features_10","title":"Features","text":"<ul> <li>add events to button (#130) (47af8fd)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#bug-fixes_5","title":"Bug Fixes","text":"<ul> <li>enablement for V4 FPM (#135) (1bf89ba)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#dependencies_32","title":"Dependencies","text":"<ul> <li>The following workspace dependencies were updated</li> <li>dependencies<ul> <li>ui5-cc-spreadsheetimporter bumped from 0.12.2 to 0.12.3</li> </ul> </li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#005-2023-04-10","title":"0.0.5 (2023-04-10)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#bug-fixes_6","title":"Bug Fixes","text":"<ul> <li>update correct versions in code (#124) (71f106e)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#dependencies_33","title":"Dependencies","text":"<ul> <li>The following workspace dependencies were updated</li> <li>dependencies<ul> <li>ui5-cc-spreadsheetimporter bumped from 0.12.0 to 0.12.2</li> </ul> </li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#004-2023-04-07","title":"0.0.4 (2023-04-07)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#bug-fixes_7","title":"Bug Fixes","text":"<ul> <li>update spreadsheet upload component (#116) (359375f)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#003-2023-04-07","title":"0.0.3 (2023-04-07)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERBUTTON/#bug-fixes_8","title":"Bug Fixes","text":"<ul> <li>but: remove unused option (#113) (897f93f)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERGENERATOR/","title":"Changelog","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERGENERATOR/#060-2024-05-08","title":"0.6.0 (2024-05-08)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERGENERATOR/#breaking-changes","title":"\u26a0 BREAKING CHANGES","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERGENERATOR/#features","title":"Features","text":"<ul> <li>enable packaged deployment (#547) (6d3450b)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERGENERATOR/#050-2024-02-23","title":"0.5.0 (2024-02-23)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERGENERATOR/#features_1","title":"Features","text":"<ul> <li>possibility to overwrite i18n texts (#501) (4c08ed7)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERGENERATOR/#041-2023-08-03","title":"0.4.1 (2023-08-03)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERGENERATOR/#bug-fixes","title":"Bug Fixes","text":"<ul> <li>remove spreadsheet button from list report template (#322) (85aa4c1)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERGENERATOR/#040-2023-06-30","title":"0.4.0 (2023-06-30)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERGENERATOR/#features_2","title":"Features","text":"<ul> <li>add button to ListReport (85c45ef)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERGENERATOR/#030-2023-06-28","title":"0.3.0 (2023-06-28)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERGENERATOR/#breaking-changes_1","title":"\u26a0 BREAKING CHANGES","text":"<p>The package was renamed from <code>generator-ui5-excelupload</code> to <code>generator-ui5-spreadsheetimporter</code>!  </p> <ul> <li>rename to spreadsheet importer (removing word <code>excel</code>) (#282)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERGENERATOR/#features_3","title":"Features","text":"<ul> <li>rename to spreadsheet importer (removing word <code>excel</code>) (#282) (e661c3e)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERGENERATOR/#025-2023-06-27","title":"0.2.5 (2023-06-27)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERGENERATOR/#bug-fixes_1","title":"Bug Fixes","text":"<ul> <li>use public api\u00b4s in sample code for V4 FE (#281) (55d3f5a)</li> </ul>"},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERGENERATOR/#024-2023-04-07","title":"0.2.4 (2023-04-07)","text":""},{"location":"pages/CHANGELOGSPREADSHEETIMPORTERGENERATOR/#bug-fixes_2","title":"Bug Fixes","text":"<ul> <li>update generator dep axios (#121) (00a3a48)</li> </ul>"},{"location":"pages/CentralDeployment/","title":"Central Deployment of UI5 Spreadsheet Importer","text":"<p>Deploying the UI5 Spreadsheet Importer centrally is the recommended approach. Central deployment simplifies usage for individual developers, as the component becomes readily available across the system.</p>"},{"location":"pages/CentralDeployment/#deployment-to-abap-system","title":"Deployment to ABAP System","text":"<p>You can deploy the UI5 Spreadsheet Importer to an ABAP system using one of the following methods:</p>"},{"location":"pages/CentralDeployment/#method-1-using-ui5-carrier-app","title":"Method 1: Using UI5 Carrier App","text":"<p>The recommended method is to use a UI5 carrier app. This app contains all required versions of the Spreadsheet Importer component. By deploying this carrier app, all versions become available in the system with a single deployment. The components are registered in the app index through the deployment.</p>"},{"location":"pages/CentralDeployment/#steps","title":"Steps:","text":"<p>1. Clone the Sample Carrier App Repository</p> <p>A sample carrier app is available here. Clone this repository to your local machine:</p> <pre><code>git clone https://github.com/spreadsheetimporter/packed-deployment-abap\n</code></pre> <p>2. Follow the Instructions</p> <p>Navigate to the repository's <code>README.md</code> file and follow the detailed deployment instructions provided there.</p> <p>3. Use the Component in Your Fiori App</p> <p>After successful deployment, the Spreadsheet Importer component is available for use in your Fiori applications.</p>"},{"location":"pages/CentralDeployment/#s4hana-public-cloud-considerations","title":"S/4HANA Public Cloud Considerations","text":"<p>For deployment to S/4HANA Public Cloud, you need to make the component available in the SAP Fiori Launchpad (FLP) and assign it to users.</p> <ul> <li>The <code>crossNavigation</code> configuration is already defined in the carrier app's manifest.json.</li> <li>Upon deployment, an FLP app descriptor is created.</li> <li>You need to create or update an IAM app, add the component to a catalog, and assign it to a role, as explained in this SAP tutorial.</li> <li>Important: Ensure that users have the necessary role assigned; otherwise, they may encounter an error like <code>\"Blocked by UCON\"</code>.</li> </ul>"},{"location":"pages/CentralDeployment/#method-2-manual-deployment","title":"Method 2: Manual Deployment","text":"<p>If you prefer manual deployment, follow these steps:</p> <p>1. Clone the Repository</p> <pre><code>git clone https://github.com/spreadsheetimporter/ui5-cc-spreadsheetimporter\n</code></pre> <p>2. Install Dependencies</p> <p>Navigate to the cloned directory and install the necessary dependencies:</p> <pre><code>pnpm install\n</code></pre> <p>or</p> <pre><code>npm install\n</code></pre> <p>3. Configure <code>ui5-deploy.yaml</code></p> <p>Update the default <code>ui5-deploy.yaml</code> file with your deployment settings.</p> <ul> <li>Version Management: When deploying a new version, use a unique app name to avoid overwriting existing versions. This is automatically handled by the variable <code>XXXnamespaceShortXXX</code> in the <code>ui5-deploy-publish.yaml</code> file.</li> <li>Custom App Name: If you choose to use your own app name, ensure you change it for newer versions to prevent overwriting.</li> </ul> <p>4. Set Up Environment Variables</p> <ul> <li>For Deployment from VS Code: Rename <code>.envTEMPLATE</code> to <code>.env</code> and enter your ABAP system username and password.</li> <li>For Deployment from SAP Business Application Studio (BAS): Remove the <code>credentials</code> section from the <code>ui5-deploy.yaml</code> file.</li> </ul> <p>5. Run Deployment</p> <p>Navigate to the package directory and execute the deployment script:</p> <pre><code>cd packages/ui5-cc-spreadsheetimporter\nnpm run deploy\n</code></pre>"},{"location":"pages/CentralDeployment/#deployment-to-html5-repository-on-btp","title":"Deployment to HTML5 Repository on BTP","text":"<p>To deploy the UI5 Spreadsheet Importer to the HTML5 Repository on SAP BTP, follow these steps:</p> <p>1. Clone the Repository</p> <pre><code>git clone https://github.com/spreadsheetimporter/ui5-cc-spreadsheetimporter\n</code></pre> <p>2. Install Dependencies</p> <pre><code>pnpm install\n</code></pre> <p>3. Optional: Modify <code>mta.yaml</code></p> <p>The <code>mta.yaml</code> file is used for deployment to the HTML5 Repository on BTP. If you need to customize deployment settings, you can modify this file accordingly.</p> <p>4. Build the MTA Archive</p> <pre><code>pnpm build:mta\n</code></pre> <p>5. Deploy to Cloud Foundry</p> <pre><code>pnpm deploy:cf\n</code></pre>"},{"location":"pages/CentralDeployment/#consuming-the-component-in-a-ui5-app","title":"Consuming the Component in a UI5 App","text":"<p>After deploying the component centrally, you can consume it in your UI5 application without installing it via npm or modifying the <code>resourceRoots</code> in <code>manifest.json</code>.</p> <ul> <li>Follow the same steps outlined in the Getting Started guide, omitting the npm installation and <code>resourceRoots</code> configuration.</li> </ul> <p>For consuming apps on SAP BTP, you can refer to this sample app, which demonstrates deployment to the HTML5 Repository.</p>"},{"location":"pages/CentralDeployment/#additional-resources","title":"Additional Resources","text":"<p>For more detailed information and guidance, consider reading the following blog posts by Wouter Lemaire:</p> <ul> <li>Connecting UI5 Components in BTP Cloud Foundry in the Same Space</li> <li>Connecting UI5 Components in BTP Cloud Foundry Across Spaces</li> </ul>"},{"location":"pages/CentralDeployment/#running-the-app-locally","title":"Running the App Locally","text":"<p>When the component is deployed centrally, you can still run your app locally. This can be achieved by either installing the component as a development dependency or by consuming the centrally deployed component from the ABAP system.</p>"},{"location":"pages/CentralDeployment/#consuming-the-component-as-a-dev-dependency-locally","title":"Consuming the Component as a Dev Dependency Locally","text":"<p>Simulate the centrally deployed component in your local environment by following these steps:</p> <p>1. Install <code>cds-plugin-ui5</code> (If Using CAP Projects)</p> <pre><code>npm install cds-plugin-ui5 --save-dev\n</code></pre> <p>2. Install the Component as a Dev Dependency</p> <p>Install the specific version of the component that your app uses:</p> <pre><code>npm install ui5-cc-spreadsheetimporter --save-dev\n</code></pre> <p>3. Install <code>ui5-middleware-servestatic</code></p> <pre><code>npm install ui5-middleware-servestatic --save-dev\n</code></pre> <p>4. Configure <code>ui5.yaml</code></p> <p>Add the following configuration to your <code>ui5.yaml</code> file (adjust the version number as needed):</p> <pre><code>server:\n  customMiddleware:\n    - name: ui5-middleware-servestatic\n      afterMiddleware: compression\n      mountPath: /resources/cc/spreadsheetimporter/v1_4_2/\n      configuration:\n        rootPath: \"node_modules/ui5-cc-spreadsheetimporter/dist\"\n</code></pre>"},{"location":"pages/CentralDeployment/#consuming-the-centrally-deployed-component-from-abap-system","title":"Consuming the Centrally Deployed Component from ABAP System","text":"<p>To consume the centrally deployed component while developing locally in VS Code or BAS:</p> <p>1. Determine the Component URL</p> <p>Access the App Index to find the URL of the component:</p> <pre><code>&lt;SAP_SYSTEM_URL&gt;/sap/bc/ui2/app_index/ui5_app_info?id=cc.spreadsheetimporter.v1_4_2\n</code></pre> <p>2. Configure Proxy Middleware</p> <p>Depending on your setup, use either <code>fiori-tools-proxy</code> or <code>ui5-middleware-simpleproxy</code> in your <code>ui5.yaml</code> file.</p> <p>Using <code>fiori-tools-proxy</code>:</p> <pre><code>server:\n  customMiddleware:\n    - name: fiori-tools-proxy\n      afterMiddleware: compression\n      configuration:\n        backend:\n          - path: /sap\n            url: &lt;Cloud Connector or local URL&gt;\n            destination: &lt;System Destination Name if in BAS&gt;\n          - path: /resources/cc/spreadsheetimporter/v1_4_2\n            destination: &lt;System Destination Name if in BAS&gt;\n            pathPrefix: /sap/bc/ui5_ui5/sap/&lt;BSP_NAME&gt;/thirdparty/customcontrol/spreadsheetimporter/v1_4_2/\n            url: &lt;Cloud Connector or local URL&gt;\n</code></pre> <p>Using <code>ui5-middleware-simpleproxy</code>:</p> <pre><code>server:\n  customMiddleware:\n    - name: ui5-middleware-simpleproxy\n      afterMiddleware: compression\n      mountPath: /resources/cc/spreadsheetimporter/v1_4_2/\n      configuration:\n        baseUri: \"&lt;SAP_SYSTEM_URL&gt;/sap/bc/ui5_ui5/sap/&lt;BSP_NAME&gt;/thirdparty/customcontrol/spreadsheetimporter/v1_4_2/\"\n        username: &lt;SAP_USERNAME&gt;\n        password: &lt;SAP_PASSWORD&gt;\n        query:\n          sap-client: '100'\n</code></pre> <p>Note: Replace placeholders like <code>&lt;SAP_SYSTEM_URL&gt;</code>, <code>&lt;BSP_NAME&gt;</code>, <code>&lt;SAP_USERNAME&gt;</code>, and <code>&lt;SAP_PASSWORD&gt;</code> with your actual system details.</p>"},{"location":"pages/Checks/","title":"Error Handling","text":""},{"location":"pages/Checks/#error-types","title":"Error Types","text":"<p>The following types of errors are handled by the UI5 Spreadsheet Upload Control:</p> <ul> <li> <p>Mandatory Fields: The control ensures that all mandatory fields are filled in before submitting data. If a mandatory field is left blank, an error message is displayed.</p> </li> <li> <p>Mandatory Fields Metadata: The control parses the metadata of the entity set and checks if all mandatory fields are filled in before submitting data. If a mandatory field is left blank, an error message is displayed (CAP Annotation).</p> </li> <li> <p>Column Names Mismatch: The control checks if the column names in the uploaded file match the expected column names. If there is a mismatch, such as an additional column that shouldn't be there, an error message is displayed.</p> </li> <li> <p>Data Type Mismatch: The control checks if the data types in the uploaded file match the expected data types.</p> </li> <li> <p>Custom Errors: The control allows you to add custom errors to the error dialog. You can add errors to the <code>messages</code> property of the <code>SpreadsheetUpload</code> control. After the event, the upload is canceled and the errors are displayed in the Error Dialog (see Events for more information).</p> </li> <li> <p>Backend Errors: If the backend service returns an error, it is displayed. In the case of checks during saving (e.g. RAP or CAP), no error is displayed in the draft scenario in Fiori Element Apps as Fiori Element catches these errors.</p> </li> <li> <p>Duplicate Columns: The control checks if the uploaded file contains duplicate columns. If there is a duplicate column, an error message is displayed.</p> </li> <li> <p>Max Length: The control checks if the length of the data in the uploaded file does not exceed the maximum length of the corresponding field. If the length exceeds the maximum length, an error message is displayed.</p> </li> </ul>"},{"location":"pages/Configuration/","title":"Configuration","text":""},{"location":"pages/Configuration/#options","title":"Options","text":"<p>How to use them see Example Code</p>"},{"location":"pages/Configuration/#configuration-options","title":"Configuration Options","text":"<p>The table below summarizes the options available for the UI5 Spreadsheet Importer Component. Detailed explanations and examples for each option are provided in the linked sections.</p>"},{"location":"pages/Configuration/#file-handling-options","title":"File Handling Options","text":"Option Description Default Type <code>columns</code> Defines columns to import and display in the template. All fields <code>string[]</code> <code>excludeColumns</code> Specifies columns to exclude from import and template. <code>[]</code> <code>string[]</code> <code>spreadsheetFileName</code> Sets the file name when downloading the template. <code>\"Template.xlsx\"</code> <code>string</code> <code>spreadsheetTemplateFile</code> Uses a custom template file instead of generating one. <code>\"\"</code> <code>string</code> or <code>ArrayBuffer</code> <code>readAllSheets</code> Reads all sheets in standalone mode. <code>false</code> <code>boolean</code> <code>readSheet</code> Reads a specific sheet or shows a sheet selector. <code>0</code> <code>number</code> or <code>string</code>"},{"location":"pages/Configuration/#ui-customization-options","title":"UI Customization Options","text":"Option Description Default Type <code>hidePreview</code> Hides the button to preview uploaded data. <code>false</code> <code>boolean</code> <code>previewColumns</code> Specifies columns to display in the preview dialog. <code>[]</code> <code>string[]</code> <code>showBackendErrorMessages</code> Displays backend error messages in the UI. <code>false</code> <code>boolean</code> <code>showOptions</code> Shows a menu to change configurations at runtime. <code>false</code> <code>boolean</code>"},{"location":"pages/Configuration/#data-processing-options","title":"Data Processing Options","text":"Option Description Default Type <code>batchSize</code> Controls the size of batches sent to the backend. <code>1000</code> <code>number</code> <code>strict</code> Controls availability of the \"Continue\" button in error dialogs. <code>false</code> <code>boolean</code> <code>decimalSeparator</code> Sets the decimal separator for numbers. Browser default <code>string</code> <code>mandatoryFields</code> Specifies mandatory fields to check in the spreadsheet. Not defined <code>string[]</code> <code>skipMandatoryFieldCheck</code> Skips the check for mandatory fields. <code>false</code> <code>boolean</code> <code>skipColumnsCheck</code> Skips the check for unknown columns not in metadata. <code>false</code> <code>boolean</code> <code>continueOnError</code> Continues processing next batches even after errors. <code>false</code> <code>boolean</code>"},{"location":"pages/Configuration/#advanced-configuration-options","title":"Advanced Configuration Options","text":"Option Description Default Type <code>fieldMatchType</code> Strategy for matching spreadsheet columns to fields. <code>\"labelTypeBrackets\"</code> <code>string</code> <code>activateDraft</code> Activates a draft immediately if possible. <code>false</code> <code>boolean</code> <code>createActiveEntity</code> Directly creates an active entity in draft scenarios. <code>false</code> <code>boolean</code> <code>standalone</code> Uses the component in standalone mode without a table. <code>false</code> <code>boolean</code> <code>useTableSelector</code> Allows choosing a table when multiple tables are present. <code>false</code> <code>boolean</code> <code>hideSampleData</code> Omits sample data in the template file. <code>false</code> <code>boolean</code> <code>sampleData</code> Adds custom sample data to the template file. Auto-generated <code>object[]</code> <code>debug</code> Enables debug mode with additional console logs. <code>false</code> <code>boolean</code> <code>componentContainerData</code> Special options for using the component in a <code>ComponentContainer</code>. Not specified <code>object</code> <code>bindingCustom</code> Uses a custom OData binding instead of a table binding. Not specified <code>object</code> <code>i18nModel</code> Uses a custom i18n model to override default texts. Not specified <code>object</code>"},{"location":"pages/Configuration/#columns","title":"<code>columns</code>","text":"<p>default: all fields This option defines which fields should only be taken into account during the upload. example:</p> <pre><code>columns: [\"ID\", \"Birthday\",\"FirstName\",\"LastName\"],\n</code></pre>"},{"location":"pages/Configuration/#excludecolumns","title":"<code>excludeColumns</code>","text":"<p>default: []</p> <p>You can specify columns to exclude from the import and the template. If you have already defined the <code>columns</code> property in your configuration, any columns listed in <code>excludeColumns</code> will be omitted from the final display. This allows you to focus on including only the relevant columns, rather than individually removing each unwanted column</p>"},{"location":"pages/Configuration/#spreadsheetfilename","title":"<code>spreadsheetFileName</code>","text":"<p>default: Template.xlsx This option defines the file name when a template is downloaded. If not defined, the code checks if Label for OData Type defined.</p>"},{"location":"pages/Configuration/#tableid","title":"<code>tableId</code>","text":"<p>This plugin first checks whether exactly one table exists on an object page. If there is no table or more than one table, an error is returned. In case of an error, the ID of the table can be specified. example: </p> <pre><code>tableId: \"ui5.isu.msb.createmeterread::RunObjectPage--fe::table::_Ableseauftrag::LineItem-innerTable\n</code></pre>"},{"location":"pages/Configuration/#odatatype","title":"<code>odataType</code>","text":"<p>With this option, it is possible to upload the data to a different Entity Set in the Service. This is helpful when the service from the table is not the actual service where the data should be uploaded.</p> <p>example:</p> <pre><code>odataType: com.sap.gateway.srvd.zui_mr_create_run.v0001.AbleseauftragType\n</code></pre> <pre><code>odataType: Orderservice.OrdersND\n</code></pre>"},{"location":"pages/Configuration/#mandatoryfields","title":"<code>mandatoryFields</code>","text":"<p>The selected fields are checked to see if they are present in the Spreadsheet file. If not defined, they will not be checked. example:</p> <pre><code>mandatoryFields: [\"product_ID\", \"quantity\"]`\n</code></pre>"},{"location":"pages/Configuration/#fieldmatchtype","title":"<code>fieldMatchType</code>","text":"<p>default: <code>labelTypeBrackets</code></p> <p>Options:  </p> <ul> <li><code>label</code> </li> <li><code>labelTypeBrackets</code></li> </ul> <p>In some cases, the labels of different attributes may be identical to each other. In order to assign the correct labels and types, there is an option to make the type visible in the header. This way, a correct assignment can be made.</p> <p>Default (with <code>label</code>), the header columns would look like this: <code>ID, Birthday, First Name, Last Name</code> With <code>labelTypeBrackets</code>, the header columns would look like this: <code>ID[ID], Birthday[birth_day], First Name[FirstName], Last Name[LastName]</code></p>"},{"location":"pages/Configuration/#activatedraft","title":"<code>activateDraft</code>","text":"<p>default: <code>false</code></p> <p>This option defines in draft scenarios whether a draft should be activated immediately or not. The option only defines whether the attempt should be started. If a draft activation is basically not possible, it will not be executed and may lead to errors. This is useful in a list report. If this option is set to <code>false</code>, all uploaded units have to be activated manually. Will be overwritten by the <code>createActiveEntity</code> option.</p> <p>Warning</p> <p>Draft Activation for OData V2 in OpenUI5 is not supported.</p>"},{"location":"pages/Configuration/#createactiveentity","title":"<code>createActiveEntity</code>","text":"<p>default: <code>false</code></p> <p>This option defines whether the <code>IsActiveEntity</code> property should be inserted into the payload sent to the backend. In draft scenarios, you can use this option to create an active entity instead of a draft. Check if your backend system supports this.</p> <p>ABAP Backend</p> <p>There is no information about which backend OData implementation is supported, but a test with RAP on S/4HANA 2021 worked.</p> <p>CAP Backend</p> <p>The feature to support <code>IsActiveEntity</code> was introduced in <code>@sap/cds</code> Version <code>7.5.3</code>. https://cap.cloud.sap/docs/releases/changelog/#dec-23-added https://cap.cloud.sap/docs/releases/archive/2023/dec23#sapui5-mass-edit </p>"},{"location":"pages/Configuration/#when-to-use-activatedraft-or-createactiveentity","title":"When to use <code>activateDraft</code> or <code>createActiveEntity</code>","text":"<ul> <li><code>activateDraft</code>: First create a draft and then activate it in two separate requests.</li> <li><code>createActiveEntity</code>: Create an active entity directly.</li> </ul> <p>If you create a draft, the determinations are not triggered in the RAP framework, for example. These are only executed when creating directly. So if you now pass \"IsActiveEntity\", the entity is created directly and therefore the determinations are also executed.</p> <p>Of course, creating the draft entity and the subsequent activation takes longer because this is an additional network request.</p> <p>Together with the option <code>continueOnError</code>, it is also possible to create all entities and try to activate the other entities if the draft activation fails. This means that at least all drafts are available.</p>"},{"location":"pages/Configuration/#batchsize","title":"<code>batchSize</code>","text":"<p>default: <code>1.000</code></p> <p>Options:  </p> <ul> <li><code>0</code> : Payload will not be divided</li> </ul> <p>For large files, it is necessary to split batch requests and not to send them all at once. This <code>batchSize</code> option enables you to control the number of records processed in each batch request, which can help avoid memory issues and improve performance.</p> <p>When the number of lines in the Spreadsheet file exceeds the specified <code>batchSize</code>, the payload array is divided into equal parts, with each part containing the maximum number of lines specified by the <code>batchSize</code>. The application then processes each part separately, sending batch requests to the backend server.</p> <p>The default value is 1,000, which means that when the number of lines in the Spreadsheet file exceeds 1,000, the payload array will be divided into equal parts, and each part will be sent as a separate batch request.</p> <p>If you set the <code>batchSize</code> to 0, the payload array will not be divided, and the entire array will be sent as a single batch request.</p>"},{"location":"pages/Configuration/#standalone","title":"<code>standalone</code>","text":"<p>default: <code>false</code></p> <p>This option defines whether the plugin should be used in standalone mode or not. If this option is set to <code>true</code>, no table is searched, and therefore no context is needed. The mandatory parameter <code>context</code> and the parameter <code>tableId</code> are no longer necessary.</p> <p>If you want to use the template download function, you have to set the parameter <code>columns</code>, otherwise the <code>Download Template</code> button will not be displayed. The <code>payload</code> will be an array of objects with the keys named like the <code>columns</code> parameter.</p> <p>Example:</p> <pre><code>this.spreadsheetUpload.attachUploadButtonPress(function (event) {\n        const model = this.getModel(\"tableData\");\n        model.setData(event.getParameter(\"payload\"));\n}, this);\n</code></pre> <p>An example of an implementation to display data of a Spreadsheetupload in a freestyle app can be found here:</p> <p>UploadToTable.controller.js UploadToTable.view.xml</p>"},{"location":"pages/Configuration/#readallsheets","title":"<code>readAllSheets</code>","text":"<p>default: <code>false</code></p> <p>This option defines whether all sheets in the Spreadsheet file should be read or not. If this option is set to <code>true</code>, the <code>payload</code> returns an additional parameter with the sheet name.</p> <p>You can access all the sheet names in the <code>uploadButtonPress</code> event.</p> <pre><code>this.spreadsheetUpload.attachUploadButtonPress(function (event) {\n    const model = this.getModel(\"tableData\");\n    model.setData(event.getParameter(\"payload\")); // &lt;-- example payload\n    event.preventDefault();\n   }, this);\n</code></pre> <p>Example Payload:</p> <pre><code>[\n    {\n        \"product_ID\": {\n            \"rawValue\": 253,\n            \"sheetDataType\": \"n\",\n            \"format\": \"General\",\n            \"formattedValue\": \"253\",\n            \"sheetName\": \"Table1\"\n        },\n        \"username\": {\n            \"r\": \"&lt;t&gt;testUser&lt;/t&gt;\",\n            \"h\": \"testUser\",\n            \"rawValue\": \"testUser\",\n            \"sheetDataType\": \"s\",\n            \"format\": \"General\",\n            \"formattedValue\": \"testUser\",\n            \"sheetName\": \"Table1\"\n        }\n    },\n    {\n        \"product_ID\": {\n            \"rawValue\": 253,\n            \"sheetDataType\": \"n\",\n            \"format\": \"General\",\n            \"formattedValue\": \"253\",\n            \"sheetName\": \"Table2\"\n        },\n        \"username\": {\n            \"r\": \"&lt;t&gt;testUser&lt;/t&gt;\",\n            \"h\": \"testUser\",\n            \"rawValue\": \"testUser\",\n            \"sheetDataType\": \"s\",\n            \"format\": \"General\",\n            \"formattedValue\": \"testUser\",\n            \"sheetName\": \"Table2\"\n        }\n    }\n]\n</code></pre>"},{"location":"pages/Configuration/#readsheet","title":"<code>readSheet</code>","text":"<p>default: <code>0</code></p> <p>By default, the first spreadsheet is read. With this option, you can specify which spreadsheet should be read with a number (0-based) or a name. If the name or number is not found, the first spreadsheet is read. Or you can set the option to <code>XXSelectorXX</code> to show a selector dialog to choose a sheet. If the option <code>readAllSheets</code> is set to <code>true</code>, this option is ignored.  </p> <ul> <li><code>0</code> : First Sheet</li> <li><code>1</code> : Second Sheet</li> <li><code>Order</code> : Sheet with the name <code>Order</code></li> <li><code>Items</code> : Sheet with the name <code>Items</code></li> <li><code>XXSelectorXX</code> : Selector Dialog to choose a sheet</li> </ul>"},{"location":"pages/Configuration/#strict","title":"<code>strict</code>","text":"<p>default: <code>false</code></p> <p>When strict is set to its default value (false), the \"Continue\" button is displayed in the error dialog, allowing users to proceed despite encountering errors in the uploaded data.  </p> <p>This option defines whether the \"Continue\" button should be displayed in the error dialog or not. When set to true, the \"Continue\" button will not be displayed, and users must resolve the errors before proceeding with the next steps in the application.</p>"},{"location":"pages/Configuration/#decimalseparator","title":"<code>decimalSeparator</code>","text":"<p>default: Browser Default</p> <p>This option defines the decimal separator for numbers as a string. This option is only needed if there are numbers as strings in the Spreadsheet File or when importing a CSV. When the datatype in the Spreadsheet File is a number, the decimal separator is automatically recognized.</p>"},{"location":"pages/Configuration/#hidepreview","title":"<code>hidePreview</code>","text":"<p>default: <code>false</code></p> <p>This option defines whether the button to preview the uploaded data in the table dialog should be hidden or not.</p>"},{"location":"pages/Configuration/#previewcolumns","title":"<code>previewColumns</code>","text":"<p>default: <code>[]</code></p> <p>This option defines which columns should be shown in the preview dialog. This is an array of strings with the property names.</p>"},{"location":"pages/Configuration/#skipmandatoryfieldcheck","title":"<code>skipMandatoryFieldCheck</code>","text":"<p>default: <code>false</code></p> <p>This option defines whether the mandatory fields defined in the metadata should be checked or not. Only the option <code>mandatoryFields</code> will be checked.</p>"},{"location":"pages/Configuration/#skipcolumnscheck","title":"<code>skipColumnsCheck</code>","text":"<p>default: <code>false</code></p> <p>This option determines whether or not the columns in the Spreadsheet File should be verified. For instance, if there is a column named <code>Test column</code> in the Spreadsheet File, and this particular column name is absent from the metadata, an error will occur by default. However, if there are columns that are not being uploaded to the backend, you can configure this option to <code>true</code> in order to bypass the verification process.</p>"},{"location":"pages/Configuration/#skipmaxlengthcheck","title":"<code>skipMaxLengthCheck</code>","text":"<p>default: <code>false</code></p> <p>This option determines whether or not the max length of the columns in the Spreadsheet File should be verified. If there is a <code>maxLength</code> defined in the metadata, the value in the Spreadsheet File will be checked.</p>"},{"location":"pages/Configuration/#showbackenderrormessages","title":"<code>showBackendErrorMessages</code>","text":"<p>default: <code>false</code></p> <p>This option defines whether backend error messages should be displayed or not. In Fiori Elements scenarios, the error messages are displayed automatically. In FreeStyle scenarios, the error messages are not displayed automatically. If this option is set to <code>false</code>, only the error message <code>Error while uploading data</code> will be displayed.</p>"},{"location":"pages/Configuration/#showoptions","title":"<code>showOptions</code>","text":"<p>default: <code>false</code></p> <p>This option defines whether the button to show the options dialog should be displayed or not. Currently, the menu is more for the development process. Later, this should also be able to be used by the user. There are also only a few selected configurations available.</p>"},{"location":"pages/Configuration/#availableoptions","title":"<code>availableOptions</code>","text":"<p>default: <code>[]</code></p>"},{"location":"pages/Configuration/#available-options","title":"Available Options","text":"<ul> <li><code>strict</code></li> <li><code>fieldMatchType</code></li> <li><code>decimalSeperator</code></li> </ul> <p>This Option defines which option the user can influence.</p>"},{"location":"pages/Configuration/#hidesampledata","title":"<code>hideSampleData</code>","text":"<p>default: <code>false</code></p> <p>This option defines whether the template file should be empty and not have any sample data. This will overwrite the <code>sampleData</code> option.</p>"},{"location":"pages/Configuration/#sampledata","title":"<code>sampleData</code>","text":"<p>default: Using generated sample data</p> <p>This option defines the sample data that is displayed in the template file. If no sample data is defined, the sample data is generated automatically. Add an object array using the property names as attributes. Only sample data will be visible in the template file, no other generated data.</p> <p>Example:</p> <pre><code>sampleData: [\n        {\n            product_ID: \"HT-1000\",\n            quantity: 1,\n            title: \"Notebook Basic 15\",\n            price: 956,\n            validFrom: new Date(),\n            timestamp: new Date(),\n            date: new Date(),\n            time: new Date(),\n            boolean: true,\n            decimal: \"1.1\"\n        }\n    ]\n</code></pre>"},{"location":"pages/Configuration/#spreadsheettemplatefile","title":"<code>spreadsheetTemplateFile</code>","text":"<p>default: <code>\"\"</code></p> <p>possible values:</p> <ul> <li>local file in the application</li> <li>URL to file</li> <li>ArrayBuffer</li> </ul> <p>By default, the template is generated with all properties or those defined in the <code>columns</code> option. If you want to use your own template file, you can use this option to add columns that are not being uploaded to the backend. It is recommended to use the <code>skipColumnsCheck</code> option in this case; otherwise, you will get errors.  </p> <p>For the local file or URL, the filename is used for the download. The config <code>spreadsheetFileName</code> will overwrite this. The config <code>spreadsheetFileName</code> will be used for ArrayBuffer value.</p> <p>Example:</p> <p>local file in the application</p> <p>It will use <code>sap.ui.require.toUrl</code> to get the file. So make sure use the correct path, including the namespace of your application. Here the namespace is <code>ui.v4.ordersv4fe</code>, and the file is located in the <code>webapp/ext</code> folder.</p> <p><code>spreadsheetTemplateFile: \"ui/v4/ordersv4fe/ext/ListReportOrdersTemplate.xlsx\"</code></p> <p>URL to file</p> <p><code>spreadsheetTemplateFile: \"https://example.com/ListReportOrdersTemplate.xlsx\"</code></p> <p>ArrayBuffer</p> <pre><code>const path = \"https://example.com/ListReportOrdersTemplate.xlsx\";\n\nconst response = await fetch(sPath);\nif (!response.ok) {\n    throw new Error(\"Network response was not ok \" + response.statusText);\n}\nconst arrayBuffer = await response.arrayBuffer();\n\n// prettier-ignore\nthis.spreadsheetUpload = await this.editFlow.getView()\n        .getController()\n        .getAppComponent()\n        .createComponent({\n            usage: \"spreadsheetImporter\",\n            async: true,\n            componentData: {\n                context: this,\n                spreadsheetTemplateFile: arrayBuffer\n            }\n        });\n</code></pre>"},{"location":"pages/Configuration/#usetableselector","title":"<code>useTableSelector</code>","text":"<p>default: <code>false</code></p> <p>This option defines whether the Table Selector should be used or not. If set to true and multiple tables in the view, the user can choose the table to upload the data to. It is also possible to set different options for each table (see TableSelector)</p>"},{"location":"pages/Configuration/#spreadsheetrowpropertyname","title":"<code>spreadsheetRowPropertyName</code>","text":"<p>If you want to send the spreadsheet row to the backend, you can define a property name here. When the property name is defined, the payload will include the spreadsheet row as an integer with the defined property name.</p>"},{"location":"pages/Configuration/#componentcontainerdata","title":"<code>componentContainerData</code>","text":"<p>The ComponentContainer is a special control that can be used to embed the spreadsheet importer in a view without the need to instantiate it in the controller. These are special options that can be used in the ComponentContainer.</p>"},{"location":"pages/Configuration/#configuration","title":"Configuration","text":"<p>For the event, the method from your view controller is attached to the event.</p> Option Description Details <code>buttonText</code> Text to be displayed on the button string <code>uploadButtonPress</code> Event after the upload button is pressed string <code>changeBeforeCreate</code> Event before data sent to the backend string <code>checkBeforeRead</code> Event before data is uploaded to the app string"},{"location":"pages/Configuration/#example","title":"Example","text":"<p>The method name in my controller belongs to the view and is called <code>uploadButtonPress</code>.</p> <pre><code>&lt;core:ComponentContainer width=\"100%\" \nusage=\"spreadsheetImporter\" propagateModel=\"true\" async=\"true\" \nsettings=\"{\n  standalone:true,\n  columns: ['product_ID', 'username'],\n  componentContainerData:{\n    uploadButtonPress:'uploadButtonPress',\n    buttonText:'Excel Upload'\n    }\n  }\" /&gt;\n</code></pre>"},{"location":"pages/Configuration/#bindingcustom","title":"<code>bindingCustom</code>","text":"<p>default: Not specified This option allows you to provide custom binding settings for the component. It can be used to override default behavior to search for a table and to use the binding of the table. Binding must be a OData binding, either V2 or V4.</p> <p>example:</p> <pre><code>this.spreadsheetUpload = await this.editFlow.getView()\n     .getController()\n     .getAppComponent()\n     .createComponent({\n      usage: \"spreadsheetImporter\",\n      async: true,\n      componentData: {\n       context: this,\n       createActiveEntity: false,\n       i18nModel: this.getModel(\"i18n\"),\n       bindingCustom: this.getView().byId(\"ui.v4.ordersv4fe::OrdersList--fe::table::Orders::LineItem-innerTable\").getBinding(\"items\")\n      }\n     });\n</code></pre>"},{"location":"pages/Configuration/#i18nmodel","title":"<code>i18nModel</code>","text":"<p>You can use your own i18n model to overwrite texts.  </p> <p>You can see all the available texts in the i18n files.</p> <p>You don't have to overwrite all texts, only the ones you want to change. If you don't overwrite a text, the default text will be used.</p> <p>Example:</p> <pre><code>this.spreadsheetUpload = await this.editFlow.getView()\n     .getController()\n     .getAppComponent()\n     .createComponent({\n      usage: \"spreadsheetImporter\",\n      async: true,\n      componentData: {\n       context: this,\n       i18nModel: this.getModel(\"i18n\")\n      }\n     });\n</code></pre>"},{"location":"pages/Configuration/#continueonerror","title":"<code>continueOnError</code>","text":"<p>default: <code>false</code></p> <p>This option defines whether the batch processing should continue if an error occurs. If you have, for example, set <code>batchSize</code> to 2 and have 4 rows, and an error occurs in the first batch of two rows, the processing will stop. If you set this flag to <code>true</code>, the processing will continue, and the second batch of two rows will be processed. This may lead to errors in the backend because the first batch of two rows was not processed correctly. Use this option with caution.</p>"},{"location":"pages/Configuration/#debug","title":"<code>debug</code>","text":"<p>default: <code>false</code></p> <p>This option defines whether the debug mode should be activated or not. If set to true, it will set the log level to <code>debug</code> (Log.Level.DEBUG) and activate the options menu with all available options.</p>"},{"location":"pages/Configuration/#example-code","title":"Example Code","text":""},{"location":"pages/Configuration/#all-options","title":"All options","text":"<p>You can assign all the options when creating the component.  </p> <pre><code>this.spreadsheetUpload = await this.getView().getController().getAppComponent().createComponent({\n    usage: \"spreadsheetImporter\",\n    async: true,\n    componentData: {\n        context: this,\n        tableId: \"ui.v4.ordersv4fe::OrdersObjectPage--fe::table::Items::LineItem-innerTable\",\n        columns: [\"product_ID\", \"quantity\", \"title\", \"price\", \"validFrom\", \"timestamp\", \"date\", \"time\", \"boolean\", \"decimal\"],\n        mandatoryFields: [\"product_ID\", \"quantity\"],\n        spreadsheetFileName: \"Test.xlsx\",\n        odataType: \"com.sap.gateway.srvd.zui_mr_create_run.v0001.AbleseauftragType\",\n        fieldMatchType: \"label\",\n        activateDraft: false,\n        batchSize: 1000,\n        standalone: false,\n        strict: false,\n        decimalSeparator: \",\",\n        hidePreview: false,\n        skipMandatoryFieldCheck: false,\n        showBackendErrorMessages: false,\n        showOptions: false,\n        availableOptions: [\"strict\", \"fieldMatchType\", \"decimalSeperator\"],\n        hideSampleData: false,\n        debug: false\n    }\n});\n</code></pre>"},{"location":"pages/Configuration/#change-options-after-creating-the-component","title":"Change options after creating the component","text":"<p>You can also change the options after creating the component or pass them to the <code>openSpreadsheetUploadDialog</code> method.</p> <pre><code>const options = {\n    context: this,\n    tableId: \"ui.v4.ordersv4fe::OrdersObjectPage--fe::table::Shipping::LineItem-innerTable\"\n   }\nthis.spreadsheetUploadTableShipping = await this.editFlow.getView()\n    .getController()\n    .getAppComponent()\n    .createComponent({\n    usage: \"spreadsheetImporter\",\n    async: true\n    });\nthis.spreadsheetUploadTableShipping.setBatchSize(500)\nthis.spreadsheetUploadTableShipping.openSpreadsheetUploadDialog(options);\n</code></pre> <p>You can also just change a subset of the options or overwrite them.</p> <pre><code>const options = {\n    tableId: \"ui.v4.ordersv4fe::OrdersObjectPage--fe::table::Shipping::LineItem-innerTable\",\n    hidePreview: true,\n    skipMandatoryFieldCheck: true\n   }\nthis.spreadsheetUploadTableShipping = await this.editFlow.getView()\n    .getController()\n    .getAppComponent()\n    .createComponent({\n    usage: \"spreadsheetImporter\",\n    async: true,\n    componentData: {\n    context: this,\n    hidePreview: false\n}\n    });\nthis.spreadsheetUploadTableShipping.setBatchSize(500)\nthis.spreadsheetUploadTableShipping.openSpreadsheetUploadDialog(options);\n</code></pre>"},{"location":"pages/Events/","title":"Events","text":"<p>The following events can be used as extension points to intervene and manipulate data:</p> Event Description <code>preFileProcessing</code> Execute custom logic before processing the spreadsheet file starts <code>checkBeforeRead</code> Check data before it is uploaded to the UI5 <code>changeBeforeCreate</code> Change data before it is sent to the backend <code>requestCompleted</code> Event when the request is completed <code>uploadButtonPress</code> Fired when the <code>Upload</code> button is pressed, possible to prevent data from being sent to the backend <p>You can attach async functions to the events by wrapping the function in a <code>Promise</code>. See Attach async functions to events for more information.</p>"},{"location":"pages/Events/#execute-custom-logic-before-processing-the-spreadsheet-file-starts","title":"Execute custom logic before processing the spreadsheet file starts","text":"<p>When the file is uploaded to the app, the <code>preFileProcessing</code> event is fired. Use this event to execute custom logic before processing the spreadsheet file starts. The <code>file</code> is available in the event and can be manipulated. If you want to prevent the processing of the file, call the <code>preventDefault</code> method of the event. If you want to change the file that will be processed, return the new file.</p>"},{"location":"pages/Events/#example","title":"Example","text":"<pre><code>this.spreadsheetUpload.attachPreFileProcessing(function (event) {\n// example\nlet file = event.getParameter(\"file\");\nif (file.name.endsWith(\".txt\")) {\n    // prevent processing of file\n    event.preventDefault();\n    // show custom ui5 error message\n    new MessageToast.show(\"File with .txt extension is not allowed\");\n    // change the file that will be processed\n    // Create a Blob with some text content\n    const blob = new Blob([\"This is some dummy text content\"], { type: \"text/plain\" });\n    // Create a File object from the Blob\n    const file2 = new File([blob], \"TEXT.txt\", { type: \"text/plain\" });\n    return file2;\n}\n});\n</code></pre>"},{"location":"pages/Events/#check-data-before-upload-to-app","title":"Check data before upload to app","text":"<p>When the file is uploaded to the app, the <code>checkBeforeRead</code> event is fired.</p>"},{"location":"pages/Events/#example_1","title":"Example","text":"<p>This sample is from the sample app. It checks whether the price is over 100.</p> <pre><code>this.spreadsheetUpload.attachCheckBeforeRead(function(event) {\n    // example\n    const sheetdata = event.getParameter(\"sheetData\");\n    let errorArray = [];\n    for (const [index, row] of sheetData.entries()) {\n        // Check for invalid price\n        for (const key in row) {\n            if (key.endsWith(\"[price]\") &amp;&amp; row[key].rawValue &gt; 100) {\n                const error = {\n                    title: \"Price too high (max 100)\",\n                    row: index + 2,\n                    group: true,\n                    rawValue: row[key].rawValue,\n                    ui5type: \"Error\"\n                };\n                errorArray.push(error);\n            }\n        }\n    }\n    event.getSource().addArrayToMessages(errorArray);\n}, this);\n</code></pre> <p>You can add errors to the <code>messages</code> property of the <code>SpreadsheetUpload</code> control. After the event, the upload is canceled and the errors are displayed in the error dialog. Use the <code>addArrayToMessages</code> method to add errors to the <code>messages</code> property. It expects an array of objects with the following properties:</p> <ul> <li><code>title</code> - the title of the error</li> <li><code>row</code> - the row number of the error</li> <li><code>group</code> - set to <code>true</code> or <code>false</code> to group the errors by title</li> <li><code>rawValue</code> - the raw value of the data from the spreadsheet</li> <li><code>ui5type</code> - the type of the error, can be <code>Error</code>, <code>Warning</code>, <code>Success</code>, <code>Information</code> or <code>None</code> from the `MessageType enum</li> </ul> <p>Errors with the same title will be grouped.</p> <p></p>"},{"location":"pages/Events/#manipulate-data-before-it-is-sent-to-the-backend","title":"Manipulate data before it is sent to the backend","text":"<p>When the <code>Upload</code> button is pressed, the <code>changeBeforeCreate</code> event is fired.  Use this event to manipulate the data before it is sent to the backend. The event expects a payload object to be returned. Make sure only one handler is attached to this event. If multiple handlers are attached, only the first payload will be used.</p>"},{"location":"pages/Events/#example_2","title":"Example","text":"<p>This sample is from the sample app. It overwrites the payload.</p> <pre><code>this.spreadsheetUpload.attachChangeBeforeCreate(function (event) {\n    let payload = event.getParameter(\"payload\");\n    // round number from 12,56 to 12,6\n    if (payload.price) {\n        payload.price = Number(payload.price.toFixed(1));\n    }\n    return payload;\n}, this);\n</code></pre>"},{"location":"pages/Events/#event-when-the-request-is-completed","title":"Event when the request is completed","text":"<p>When the request is completed, the <code>requestCompleted</code> event is fired. Use the <code>success</code> parameter to check if the request was successful.</p>"},{"location":"pages/Events/#example_3","title":"Example","text":"<pre><code>this.spreadsheetUpload.attachRequestCompleted(function (event) {\n    const success = event.getParameter(\"success\");\n    if (success) {\n        console.log(\"Request Completed\");\n    } else {\n        console.log(\"Request Failed\");\n    }\n}, this);\n</code></pre>"},{"location":"pages/Events/#event-when-the-upload-button-is-pressed","title":"Event when the upload button is pressed","text":"<p>When the <code>Upload</code> button is pressed, the <code>uploadButtonPress</code> event is fired. The event is fired before the <code>changeBeforeCreate</code> event. Prevent the data from being sent to the backend by calling the <code>preventDefault</code> method of the event.</p>"},{"location":"pages/Events/#example-1","title":"Example 1","text":"<pre><code>this.spreadsheetUpload.attachUploadButtonPress(function (event) {\n    // Prevent data from being sent to the backend\n    event.preventDefault();\n    // Get payload\n    const payload = event.getParameter(\"payload\");\n}, this);\n</code></pre>"},{"location":"pages/Events/#example-2","title":"Example 2","text":"<p>You can also use this event to sent the data to the backend and add possible errors to the component. Use the <code>addArrayToMessages</code> method to add errors. It will display the errors in the error dialog after the execution of the event.</p> <pre><code>this.spreadsheetUpload.attachUploadButtonPress(async function (event) {\n    event.preventDefault();\n\n    event.getSource().addArrayToMessages([{\n        title: \"Error on creating\",\n        group: false,\n        ui5type: \"Error\"\n    }]);\n\n    // simulate async call\n    await new Promise((resolve) =&gt; {\n        // Wait for 2 seconds\n        setTimeout(() =&gt; {\n            resolve();\n        }, 2000);\n    });\n\n    // Code here will execute after the 2-second wait\n}, this);\n</code></pre>"},{"location":"pages/Events/#attach-async-functions-to-events","title":"Attach async functions to events","text":"<p>You can attach async functions to the events by wrapping the function in a <code>Promise</code>. This allows you to send a request to the backend for checks that are not possible in the frontend, for example with a function import.</p> <pre><code>// Init spreadsheet upload\nthis.spreadsheetUpload = await this.editFlow.getView()\n        .getController()\n        .getAppComponent()\n        .createComponent({\n            usage: \"spreadsheetImporter\",\n            async: true,\n            componentData: {\n                context: this,\n                activateDraft: true\n            }\n        });\n\n// Event to check before uploading to app\nthis.spreadsheetUpload.attachCheckBeforeRead(async function (event) {\n    return new Promise(async (resolve, reject) =&gt; {\n        // Example\n        console.log(\"Start async wait\");\n        await new Promise((resolve) =&gt; setTimeout(resolve, 5000));\n        console.log(\"End async wait\");\n        // Don't forget to resolve the promise\n        resolve();\n    });\n}, this);\n</code></pre>"},{"location":"pages/Generator/","title":"yo Generator","text":"<p>\u26a0\ufe0f This is currently not in further development and might not work. Start on the Getting Started page instead and use the Fiori Guided Development.</p> <p>To make integration easier, you can use a yo generator to avoid manual additional steps in your project.</p>"},{"location":"pages/Generator/#installation","title":"Installation","text":"<pre><code>npm i -g yo\nnpm i -g generator-ui5-spreadsheetimporter\n</code></pre>"},{"location":"pages/Generator/#usage","title":"Usage","text":"<p>Start from your UI5 app and then run:</p> <pre><code>yo ui5-spreadsheetimporter\n</code></pre>"},{"location":"pages/Generator/#support","title":"Support","text":"<p>Currently, the generator supports the following scenarios:</p> OData Version List Report Object Page Freestyle Flexible Programming Model V2 V4"},{"location":"pages/GettingStarted/","title":"Getting Started","text":""},{"location":"pages/GettingStarted/#deployment-strategy","title":"Deployment Strategy","text":"<p>We recommend a centralized deployment approach for this component. Decentralized or packaged deployment methods are known to cause issues when used with ABAP systems and SAP Business Technology Platform (BTP). Therefore, use decentralized deployment only if centralized deployment is not feasible.</p> <p>For decentralized deployment in ABAP, refer to ABAP Component Deployment. For BTP deployment, special considerations are necessary, which are detailed in BTP Deployment. A full BTP deployment example is available in this sample project.</p>"},{"location":"pages/GettingStarted/#decentralized-deployment","title":"Decentralized Deployment","text":"<p>Decentralized Deployment</p> <p>This method is not recommended. Please use Central Deployment instead.</p> <p>In decentralized deployment, the component is included directly in each app and deployed with it. For ABAP-specific instructions, refer to ABAP Component Deployment.</p>"},{"location":"pages/GettingStarted/#central-deployment","title":"Central Deployment","text":"<p>In centralized deployment, the Spreadsheet Upload component is stored centrally, either in an on-premise ABAP system or in BTP. For detailed instructions, see the Central Deployment page.</p>"},{"location":"pages/GettingStarted/#setup","title":"Setup","text":"<p>To integrate the <code>ui5-cc-spreadsheetimporter</code> component manually, follow the steps below. For a simplified setup, you can also use the Yo generator.</p>"},{"location":"pages/GettingStarted/#requirements","title":"Requirements","text":"<ul> <li>Node.js v16.18.0, v18.12.0, or higher</li> <li>npm v8.0.0 or higher</li> <li>UI5 CLI v3.0.0 or higher</li> </ul>"},{"location":"pages/GettingStarted/#setup-for-decentralized-deployment","title":"Setup for Decentralized Deployment","text":"<p>1. Install the component from npm:</p> <pre><code>npm install ui5-cc-spreadsheetimporter\n</code></pre> <p>2. Add <code>resourceRoots</code> to the <code>sap.ui5</code> section of your <code>manifest.json</code>:</p> <p>!!! warning \"Version Management\"        Whenever you update the <code>ui5-cc-spreadsheetimporter</code> module, ensure that the version specified in your <code>manifest.json</code> is up to date. For more information, see Version Namespace.</p> <pre><code>\"resourceRoots\": {\n  \"cc.spreadsheetimporter.v1_4_2\": \"./thirdparty/customcontrol/spreadsheetimporter/v1_4_2\"\n}\n</code></pre> <p>3. Update your build script in <code>package.json</code> by adding <code>--all</code>:</p> <pre><code>\"scripts\": {\n  \"build\": \"ui5 build --config=ui5.yaml --all --clean-dest --dest dist\"\n}\n</code></pre> <p>4. Add <code>componentUsages</code> to the <code>sap.ui5</code> section of your <code>manifest.json</code>:</p> <p>!!! warning \"Version Management\"        Whenever you update the <code>ui5-cc-spreadsheetimporter</code> module, ensure that the version specified in your <code>manifest.json</code> is up to date. For more information, see Version Namespace.</p> <pre><code>\"componentUsages\": {\n  \"spreadsheetImporter\": {\n    \"name\": \"cc.spreadsheetimporter.v1_4_2\"\n  }\n}\n</code></pre> <p>5. Optional: Handle the \"component does not exist\" error</p> <p>If you encounter the error <code>component does not exist</code> when deploying to an SAP system (S/4 On-Premise or SAP BTP ABAP environment), add the following to your <code>manifest.json</code>:</p> <p>Resource Roots Path</p> <p>Ensure the <code>resourceRoots</code> path is correct, especially considering the lowercase format change since version 0.34.0.</p> <pre><code>\"sap.app\": {\n  \"embeds\": [\"thirdparty/customcontrol/spreadsheetimporter/v1_4_2\"]\n}\n</code></pre>"},{"location":"pages/GettingStarted/#setup-for-central-deployment","title":"Setup for Central Deployment","text":"<p>1. Deploy the component using your desired version. Refer to Central Deployment for detailed instructions.</p> <p>2. Add <code>componentUsages</code> to the <code>sap.ui5</code> section of your <code>manifest.json</code>:</p> <p>Version Management</p> <p>Whenever you update the <code>ui5-cc-spreadsheetimporter</code> module, ensure that the version specified in your <code>manifest.json</code> is up to date. For more information, see Version Namespace. Also, ensure the version is available in the system.</p> <pre><code>\"componentUsages\": {\n  \"spreadsheetImporter\": {\n    \"name\": \"cc.spreadsheetimporter.v1_4_2\"\n  }\n}\n</code></pre>"},{"location":"pages/GettingStarted/#starting-with-the-fiori-elements-application","title":"Starting with the Fiori Elements Application","text":"<p>OData Version Differences</p> <p>There are different implementations for Fiori Elements depending on the OData version.</p> <p>To start the Spreadsheet Upload Dialog, add a button to your Fiori Elements app. The Guided Development extension is a recommended way to add a custom action:</p> <p></p> <p>After adding the custom action, implement your custom code using either OData V2 or OData V4. You can also use a controller extension in Fiori Elements. For an example, see the Fiori Elements V4 Example App.</p>"},{"location":"pages/GettingStarted/#starting-with-fiori-elements-odata-v4","title":"Starting with Fiori Elements (OData V4)","text":""},{"location":"pages/GettingStarted/#manifestjson-extension","title":"Manifest.json Extension","text":"<p>Here is an example of a custom action from the sample app for the object page. This example adds a button to the order items table on the object page. If there are multiple tables, always specify the relevant <code>tableId</code>. By using <code>\"enabled\": \"{ui&gt;/isEditable}\"</code>, you can automatically disable the button when the page is not in edit mode.</p> <pre><code>\"OrdersObjectPage\": {\n  \"type\": \"Component\",\n  \"id\": \"OrdersObjectPage\",\n  \"name\": \"sap.fe.templates.ObjectPage\",\n  \"options\": {\n    \"settings\": {\n      \"editableHeaderContent\": false,\n      \"entitySet\": \"Orders\",\n      \"navigation\": {\n        \"Items\": {\n          \"detail\": {\n            \"route\": \"Orders_ItemsObjectPage\"\n          }\n        }\n      },\n      \"controlConfiguration\": {\n        \"Items/@com.sap.vocabularies.UI.v1.LineItem\": {\n          \"actions\": {\n            \"ObjectPageExtController\": {\n              \"press\": \"ui.v4.ordersv4fe.ext.ObjectPageExtController.openSpreadsheetUploadDialogTable\",\n              \"visible\": true,\n              \"requiresSelection\": false,\n              \"enabled\": \"{ui&gt;/isEditable}\",\n              \"text\": \"Spreadsheet Upload\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"pages/GettingStarted/#custom-code","title":"Custom Code","text":"<p>The following code sets the busy indicator, creates the component if it hasn't been created already, and opens the dialog. The <code>context</code> attribute is mandatory to allow the component to access the app's context, including binding paths and the model. You can pass options like <code>context</code> at runtime using the <code>openSpreadsheetUploadDialog</code> method. This is useful when opening the dialog for specific tables (see TableSelector).</p> <pre><code>openSpreadsheetUploadDialog: async function (event) {\n  this.editFlow.getView().setBusyIndicatorDelay(0);\n  this.editFlow.getView().setBusy(true);\n  this.spreadsheetUpload = await this.editFlow.getView()\n    .getController()\n    .getAppComponent()\n    .createComponent({\n      usage: \"spreadsheetImporter\",\n      async: true,\n      componentData: {\n        context: this,\n      },\n    });\n  this.spreadsheetUpload.openSpreadsheetUploadDialog();\n  this.editFlow.getView().setBusy(false);\n}\n</code></pre>"},{"location":"pages/GettingStarted/#example","title":"Example","text":"<p>See the live demo at https://livedemo.spreadsheet-importer.com/.</p> <p></p>"},{"location":"pages/GettingStarted/#starting-with-fiori-elements-odata-v2","title":"Starting with Fiori Elements (OData V2)","text":""},{"location":"pages/GettingStarted/#manifestjson-extension_1","title":"Manifest.json Extension","text":"<p>Here is an example of a custom action from the sample app for the object page.</p> <pre><code>\"extends\": {\n  \"extensions\": {\n    \"sap.ui.controllerExtensions\": {\n      \"sap.suite.ui.generic.template.ObjectPage.view.Details\": {\n        \"controllerName\": \"ui.v2.ordersv2.ext.controller.ObjectPageExt\",\n        \"sap.ui.generic.app\": {\n          \"Orders\": {\n            \"EntitySet\": \"Orders\",\n            \"Sections\": {\n              \"Items::com.sap.vocabularies.UI.v1.LineItem\": {\n                \"id\": \"Items::com.sap.vocabularies.UI.v1.LineItem\",\n                \"Actions\": {\n                  \"spreadsheetImporter\": {\n                    \"id\": \"spreadsheetUploadButton\",\n                    \"text\": \"Spreadsheet Upload\",\n                    \"applicablePath\": \"ui&gt;/editable\",\n                    \"press\": \"openSpreadsheetUploadDialog\",\n                    \"requiresSelection\": false\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"pages/GettingStarted/#custom-code_1","title":"Custom Code","text":"<pre><code>openSpreadsheetUploadDialog: async function (event) {\n  this.getView().setBusyIndicatorDelay(0);\n  this.getView().setBusy(true);\n  this.spreadsheetUpload = await this.getView()\n    .getController()\n    .getOwnerComponent()\n    .createComponent({\n      usage: \"spreadsheetImporter\",\n      async: true,\n      componentData: {\n        context: this,\n      },\n    });\n  this.spreadsheetUpload.openSpreadsheetUploadDialog();\n  this.getView().setBusy(false);\n}\n</code></pre>"},{"location":"pages/GettingStarted/#deployment-of-your-app","title":"Deployment of Your App","text":""},{"location":"pages/GettingStarted/#abap-stack","title":"ABAP Stack","text":""},{"location":"pages/GettingStarted/#component-deployment","title":"Component Deployment","text":"<p>These instructions apply generally to UI5 Reuse Components, not just the Spreadsheet Importer (see UI5 Reuse Components).</p> <p>When deploying the component decentrally to an ABAP system, its namespace is registered in the app index, just as it is with central deployment. After deploying decentrally for the first time, you can use the component centrally (see Setup Central Deployment). However, you can only deploy the component decentrally once because the namespace can only exist once in the app index.</p> <p>This is why we recommend starting with central deployment.</p>"},{"location":"pages/GettingStarted/#using-the-component-outside-the-app-index","title":"Using the Component Outside the App Index","text":"<p>If the component is used outside the Fiori Launchpad, or if it cannot be found even after deployment, you can direct the app to the correct path using <code>url</code> and <code>name</code> in the <code>createComponent</code> method:</p> <pre><code>openSpreadsheetUploadDialog: async function (oEvent) {\n  this.getView().setBusyIndicatorDelay(0);\n  this.getView().setBusy(true);\n  this.spreadsheetUpload = await this.getView()\n    .getController()\n    .getAppComponent()\n    .createComponent({\n      usage: \"spreadsheetImporter\",\n      async: true,\n      componentData: {\n        context: this,\n      },\n      url: \"/sap/bc/ui5_ui5/sap/Z_XUP_v0_33_2\",\n      name: \"cc.spreadsheetimporter.v1_4_2\"\n    });\n  this.spreadsheetUpload.openSpreadsheetUploadDialog();\n  this.getView().setBusy(false);\n}\n</code></pre> <p>This method can be used as an alternative to <code>resourceRoots</code> in the <code>manifest.json</code> when you do not have access to the <code>manifest.json</code> (e.g., in adaptation projects).</p>"},{"location":"pages/GettingStarted/#error-librarycomponent-used-in-application-does-not-exist","title":"Error: Library/Component Used in Application Does Not Exist","text":"<p>When deploying the app to your ABAP system, you might encounter an error like <code>SAPUI5 library/component cc.spreadsheetimporter.v1_4_2 used in application Z*** does not exist</code>. The application is deployed, but the service returns an error.</p> <p>To avoid this error, add the following to your <code>manifest.json</code> file:</p> <p>Resource Roots Path</p> <p>Ensure the <code>resourceRoots</code> path is correct, especially considering the lowercase format change since version 0.34.0.</p> <pre><code>\"sap.app\": {\n  \"embeds\": [\"thirdparty/customcontrol/spreadsheetimporter/v1_4_2\"]\n}\n</code></pre> <p>This addition should resolve the issue, making <code>resourceRoots</code> unnecessary.</p>"},{"location":"pages/GettingStarted/#file-unknown-when-deploying-the-app","title":"File Unknown When Deploying the App","text":"<p>If the ABAP system does not recognize <code>.ts</code> files, create a <code>.Ui5RepositoryTextFiles</code> file in your app's <code>webapp</code> folder, as described here. An example file is available here and might look like this:</p> <pre><code>^.*.ts$\n^.*.ts.map$\n^.*.js.map$\n</code></pre> <p>If you use the <code>deploy-to-abap</code> command, you can exclude these files from the deployment by adding the <code>exclude</code> option to your <code>ui5.yaml</code> file:</p> <pre><code>customTasks:\n  - name: deploy-to-abap\n    afterTask: replaceVersion\n    configuration:\n      target:\n        url: https://XYZ.sap-system.corp:44311\n        client: 200\n        auth: basic\n      credentials:\n        username: env:XYZ_USER\n        password: env:XYZ_PASSWORD\n      app:\n        name: /TEST/SAMPLE_APP\n        package: /TEST/UPLOAD\n        transport: XYZQ300582\n      exclude:\n      - .*\\.ts\n      - .*\\.ts.map\n      - .*\\.js.map\n</code></pre>"},{"location":"pages/GettingStarted/#btp-environment","title":"BTP Environment","text":""},{"location":"pages/GettingStarted/#running-with-cap","title":"Running with CAP","text":"<p>If you are using CAP and installing the component as a dependency to your UI5 app, you need to use <code>cds-plugin-ui5</code> to ensure the UI5 Tooling loads the installed component.</p> <pre><code>npm install cds-plugin-ui5 --save-dev\n</code></pre>"},{"location":"pages/GettingStarted/#configuring-ui5-task-zipper-in-your-deployment-yaml-file","title":"Configuring <code>ui5-task-zipper</code> in Your Deployment YAML File","text":"<p>A full example can be found in this sample project.</p> <p>If you use the <code>ui5-task-zipper</code> task, ensure that <code>ui5-cc-spreadsheetimporter</code> is included in the zip file.</p> <pre><code>builder:\n  customTasks:\n    - name: ui5-task-zipper\n      afterTask: generateComponentPreload\n      configuration:\n        archiveName: uimodule\n        includeDependencies:\n        - ui5-cc-spreadsheetimporter-v1-4-2\n</code></pre> <p>The metadata name is defined in the <code>ui5.yaml</code> file of the component.</p> <p>Metadata Name</p> <p>Before version 0.34.0, the metadata name was <code>ui5-cc-spreadsheetimporter</code> without the version.</p>"},{"location":"pages/GettingStarted/#updating-sapcloudservice-in-spreadsheet-importer-manifestjson","title":"Updating <code>\"sap.cloud\".service</code> in Spreadsheet Importer <code>manifest.json</code>","text":"<p>When using decentralized deployment, deployment may fail with the following error:</p> <p><code>\"Service name 'spreadsheetimporter_v1_4_2' and public setting 'true' in embedded manifest.json have to be equal to service name 'xxxxxxx' and public setting 'true' of root manifest.json\"</code></p> <p>SAP currently does not provide a fix for this.</p>"},{"location":"pages/GettingStarted/#workaround-1","title":"Workaround 1","text":"<p>Manually update the <code>service</code> name in the <code>manifest.json</code> of the Spreadsheet Importer to match the service name in your app's <code>manifest.json</code>.</p> <p>To automate this, you can use the custom UI5 Tooling task <code>ui5-task-btp-manifest</code>.</p>"},{"location":"pages/GettingStarted/#install-the-task","title":"Install the Task","text":"<pre><code>npm install --save-dev ui5-task-btp-manifest\n</code></pre>"},{"location":"pages/GettingStarted/#add-the-task-to-your-ui5yaml","title":"Add the Task to Your <code>ui5.yaml</code>","text":"<pre><code>builder:\n  customTasks:\n    - name: ui5-task-btp-manifest\n      afterTask: replaceVersion\n</code></pre> <p>This task will update the Spreadsheet Importer manifest with the app's service name at this path: <code>dist/thirdparty/customcontrol/spreadsheetimporter/v1_4_2/manifest.json</code>.</p>"},{"location":"pages/GettingStarted/#workaround-2","title":"Workaround 2","text":"<p>According to a comment from user TravelTechCode, you can try the following deployment sequence:</p> <ol> <li>Deploy your app without the UI5 Spreadsheet component first.</li> <li>Add the UI5 Spreadsheet component and deploy the app again.</li> </ol> <p>This approach avoids deployment errors and allows the component to be accessed in the content explorer.</p>"},{"location":"pages/HowItWorks/","title":"How it Works","text":"<p>The major advantage of this UI5 component is its universal usability with minimal configuration, and it is independent of the backend implementation. This is achieved by reading the files that are already present in the frontend and utilizing the standard UI5 APIs.</p>"},{"location":"pages/HowItWorks/#technical-background","title":"Technical Background","text":"<p>The UI5 SpreadsheetUpload is built on a reuse component, which requires the definition of componentUsages in the manifest and the usage of createComponent in the code. This allows for the use of i18n and a component-preload, which enhances the loading time performance. When the component is centrally deployed on an ABAP server, the setup is straightforward.</p>"},{"location":"pages/HowItWorks/#integration-into-ui5","title":"Integration into UI5","text":"<p>Integrating the component is straightforward as long as the component has access to the context or the view, as without this access, it won't function. Upon creation of the component, it searches for a table in the view to utilize the binding for the upload. Other necessary details, such as metadata and draft activation actions, are also derived from the table. If no table or more than two tables are found, the table must be defined in the options.</p>"},{"location":"pages/HowItWorks/#creating-the-template-file","title":"Creating the Template File","text":"<p>By utilizing the metadata, the component can identify the entity of the binding and generate a template file with labels.</p>"},{"location":"pages/HowItWorks/#extracting-the-spreadsheet-files","title":"Extracting the Spreadsheet Files","text":"<p>To avoid sending the entire Spreadsheet file as binary data to the backend, the component utilizes the open-source library SheetJS to read data from the file. Additionally, Spreadsheet formats are converted to OData formats. With the raw data at hand, the component can utilize the ODataListBinding and <code>create</code> to send the data to the backend. Since the standard interfaces are used, the key advantage is the independence from the backend scenario, such as CAP or RAP.</p> <p>The data is sent as a batch, and to prevent a batch from becoming too large, the data is sent in batches of 1,000 by default. The size of the batches can be adjusted in the options.</p>"},{"location":"pages/SupportVersions/","title":"Supported Versions","text":"<p>The goal is to test as many versions and environments as possible, especially all versions in long-term maintenance.  Even though the tests are currently only in CAP, every OData Service, including the <code>metadata.xml</code>, is supported. That includes OData Services created with CAP, RAP, and SEGW. That means as long as you are using UI5 version <code>1.71</code>, you can also use this in ECC or S/4HANA.</p> <p>Here is an overview of the apps that were created and passed the smoke test:</p> <p>Another overview will show you which apps are already tested automatically with wdi5 and are therefore tested on a constant basis.</p> <p>All the example apps can be found in the <code>examples</code> folder. The test scripts can be found in the <code>test</code> folder. More info at wdi5 tests</p> <p>To summarize: All stable UI5 versions are currently supported (from 1.71). Also, 2.0 is already supported but is still experimental, as version 2.0 may still change.</p>"},{"location":"pages/SupportVersions/#apps","title":"Apps","text":""},{"location":"pages/SupportVersions/#cap-v2","title":"CAP V2","text":"List Report Draft List Report Non Draft Object Page Draft Object Page Non Draft Freestyle"},{"location":"pages/SupportVersions/#cap-v4","title":"CAP V4","text":"List Report Draft Object Page Draft Freestyle Flexible Programming Model Typescript CDS Plugin"},{"location":"pages/SupportVersions/#wdi5-tests","title":"wdi5 Tests","text":""},{"location":"pages/SupportVersions/#cap-v2_1","title":"CAP V2","text":"UI5 Version List Report Draft List Report Non Draft Object Page Draft Object Page Non Draft Freestyle OpenUI5 Freestyle 2.0 1.120 1.108 1.96 1.84 1.71 <p>Warning</p> <p>OpenUI5: Draft Activation for V2 in OpenUI5 is not supported.</p>"},{"location":"pages/SupportVersions/#cap-v4_1","title":"CAP V4","text":"UI5 Version List Report Draft Object Page Draft Freestyle Flexible Programming Model Typescript CDS Plugin 2.0 1.120 1.108 1.96 1.84"},{"location":"pages/TableSelector/","title":"Table Selector Implementation Documentation","text":"<p>The <code>TableSelector</code> is designed to help users select a table from a list of available tables in a SAP UI5 application. The tables are aggregated and presented in a dialog, from which a user can select a table.</p>"},{"location":"pages/TableSelector/#usage","title":"Usage","text":"<p><code>TableSelector</code> is triggered when the option <code>useTableSelector</code> is set to <code>true</code> in the component options and multiple tables are in the view. It will open when you execute <code>openSpreadsheetUploadDialog</code>.  </p> <pre><code>this.spreadsheetUpload = await this.editFlow.getView().getController().getAppComponent().createComponent({\n  usage: \"spreadsheetImporter\",\n  async: true,\n  componentData: {\n    context: this,\n    useTableSelector: true\n  }\n});\nthis.spreadsheetUpload.openSpreadsheetUploadDialog();\n</code></pre>"},{"location":"pages/TableSelector/#custom-options-for-each-table","title":"Custom Options for each Table","text":"<p>If you want to set custom options for each table, you have to trigger the Table Selector before opening the dialog to get the table id with <code>triggerInitContext()</code>.</p> <pre><code>this.spreadsheetUpload = await this.editFlow.getView().getController().getAppComponent().createComponent({\n  usage: \"spreadsheetImporter\",\n  async: true,\n  componentData: {\n    context: this,\n    useTableSelector: true\n  }\n});\n// necessary to trigger Table Selector and get tableId\nawait this.spreadsheetUpload.triggerInitContext();\nconst selectedTable = this.spreadsheetUpload.getTableId();\n</code></pre> <p>The method <code>getTableId</code> returns the table id of the selected table. With the id, you can set custom options for each table.</p>"},{"location":"pages/TableSelector/#full-example","title":"Full Example","text":"<p>Make sure you check if the user selected a table with <code>if (selectedTable)</code>.</p> <pre><code>openSpreadsheetUploadDialog: async function (event) {\n  let spreadsheetImporterOptions;\n  this.editFlow.getView().setBusyIndicatorDelay(0);\n  this.editFlow.getView().setBusy(true);\n  // prettier-ignore\n  this.spreadsheetUpload = await this.editFlow.getView()\n      .getController()\n      .getAppComponent()\n      .createComponent({\n        usage: \"spreadsheetImporter\",\n        async: true,\n        componentData: {\n          context: this,\n          useTableSelector: true\n        }\n      });\n  // necessary to trigger Table Selector and get tableId\n  await this.spreadsheetUpload.triggerInitContext();\n  const selectedTable = this.spreadsheetUpload.getTableId();\n  if (selectedTable) {\n    // not necessary to have specific options for each table, but possible to set options for specific tables\n    // check if selectedTable is available, if not, the user clicked on cancel\n    if (selectedTable === \"ui.v4.ordersv4fe::OrdersObjectPage--fe::table::Items::LineItem-innerTable\") {\n      spreadsheetImporterOptions = {\n        context: this,\n        tableId: \"ui.v4.ordersv4fe::OrdersObjectPage--fe::table::Items::LineItem-innerTable\",\n        columns: [\"product_ID\", \"quantity\", \"title\", \"price\", \"validFrom\", \"timestamp\", \"date\", \"time\", \"boolean\", \"decimal\"],\n        mandatoryFields: [\"product_ID\", \"quantity\"],\n        spreadsheetFileName: \"Test.xlsx\",\n        hidePreview: true,\n        sampleData: [{\n          product_ID: \"HT-1000\",\n          quantity: 1,\n          title: \"Notebook Basic 15\",\n          price: 956,\n          validFrom: new Date(),\n          timestamp: new Date(),\n          date: new Date(),\n          time: new Date(),\n          boolean: true,\n          decimal: 1.1\n        }]\n      };\n    }\n    if (selectedTable === \"ui.v4.ordersv4fe::OrdersObjectPage--fe::table::Shipping::LineItem-innerTable\") {\n      spreadsheetImporterOptions = {\n        context: this,\n        tableId: \"ui.v4.ordersv4fe::OrdersObjectPage--fe::table::Shipping::LineItem-innerTable\"\n      };\n    }\n\n    // possible to open dialog with options, option not necessary\n    this.spreadsheetUpload.openSpreadsheetUploadDialog(spreadsheetImporterOptions);\n  }\n  this.editFlow.getView().setBusy(false);\n},\n</code></pre>"},{"location":"pages/Troubleshooting/","title":"Troubleshooting","text":""},{"location":"pages/Troubleshooting/#issues","title":"Issues","text":"<p>If you encounter any issues that are not covered in this documentation, have suggestions, or ideas for improvements, please create an issue in the GitHub repository: https://github.com/spreadsheetimporter/ui5-cc-spreadsheetimporter/issues</p>"},{"location":"pages/Troubleshooting/#activate-debug-mode-and-copy-error-messages","title":"Activate Debug Mode and Copy Error Messages","text":""},{"location":"pages/Troubleshooting/#activate-debug-mode","title":"Activate Debug Mode","text":"<p>To activate the debug mode, you need to add the following parameter to the URL: <code>?sap-ui-debug=true</code></p> <p>Alternatively, you can set the <code>debug</code> parameter to <code>true</code> during the initialization of the Spreadsheet Upload component. However, this can only be done if the component can be opened, so it's preferable to use the URL parameter if possible.</p> <pre><code>this.spreadsheetUpload = await this.getView().getController().getAppComponent().createComponent({\n    usage: \"spreadsheetImporter\",\n    async: true,\n    componentData: {\n      context: this,\n      debug: true\n    }\n});\n</code></pre>"},{"location":"pages/Troubleshooting/#copy-console-messages","title":"Copy Console Messages","text":"<p>After activating the debug mode, you can copy the console messages from the browser console. Make sure to do this after reproducing the error.</p> <ol> <li>Open the browser console</li> <li>Right-click on a message and select \"Save as\"</li> </ol> <p>Save the messages to a file and use it to report an issue. Alternatively, you can try selecting all the messages and copying them to a text file.</p>"},{"location":"pages/Troubleshooting/#error-script-load-error","title":"Error: <code>script load error</code>","text":"<p>If you receive an error similar to the following:</p> <pre><code>ui5loader-dbg.js:1042 Uncaught (in promise) ModuleError: failed to load 'cc/spreadsheetimporter/v1_4_2/Component.js' from resources/cc/spreadsheetimporter/v1_4_2/Component.js: script load error\n</code></pre> <p>Since the component is designed to always use a specific version, you must ensure that the correct version is used after an update. In this example, it appears that the installed version does not match the version defined in the manifest file. The application is trying to load version \"0.16.3\", but the installed version is \"0.16.4\". See the configurations for this version below:</p>"},{"location":"pages/Troubleshooting/#packagejson","title":"package.json","text":"<pre><code>  \"dependencies\": {\n    \"ui5-cc-spreadsheetimporter\": \"0.16.4\"\n  }\n</code></pre>"},{"location":"pages/Troubleshooting/#manifestjson","title":"manifest.json","text":"<p>\u26a0\ufe0f The <code>resourceRoots</code> path \"./thirdparty/customcontrol/spreadsheetimporter/v1_4_2\" changed from version 0.34.0 to lowercase. Please make sure to use the correct path.</p> <pre><code>\"componentUsages\": {\n    \"spreadsheetImporter\": {\n        \"name\": \"cc.spreadsheetimporter.v1_4_2\"\n    }\n},\n\"resourceRoots\": {\n    \"cc.spreadsheetimporter.v1_4_2\": \"./thirdparty/customcontrol/spreadsheetimporter/v1_4_2\"\n}\n</code></pre>"},{"location":"pages/Typescript/","title":"Typescript","text":"<p>Since the component is written in TypeScript, we can also provide the generated types. </p> <p>The GitHub repository contains a sample TypeScript application created with the Fiori Generator. You can find the example app in the example folder.</p>"},{"location":"pages/Typescript/#setup","title":"Setup","text":"<p>Generate an app with the Fiori Tools Generator in TypeScript or use the Easy UI5 TS Generator.</p>"},{"location":"pages/Typescript/#ts-configjson","title":"ts-config.json","text":"<p>You can consume the types from the <code>@sapui5/ts-types-esm</code> and the <code>ui5-cc-spreadsheetimporter</code> package.</p> <pre><code>    \"types\": [\"@sapui5/ts-types-esm\", \"ui5-cc-spreadsheetimporter\"],\n    \"typeRoots\": [\"./node_modules\"]\n</code></pre>"},{"location":"pages/Typescript/#manifestjson","title":"manifest.json","text":"<p>Add the component usage and the resource roots to the manifest.json as described in the Getting Started section.</p> <p>\u26a0\ufe0f The <code>resourceRoots</code> path \"./thirdparty/customcontrol/spreadsheetimporter/v1_4_2\" changed from version 0.34.0 to lowercase. Please make sure to use the correct path.</p> <pre><code>        \"componentUsages\": {\n            \"spreadsheetImporter\": {\n                \"name\": \"cc.spreadsheetimporter.v1_4_2\"\n            }\n        },\n        \"resourceRoots\": {\n            \"cc.spreadsheetimporter.v1_4_2\": \"./thirdparty/customcontrol/spreadsheetimporter/v1_4_2\"\n        },\n</code></pre>"},{"location":"pages/Typescript/#custom-action","title":"Custom Action","text":"<p>This is an example of how you could create the component and attach an event handler to the <code>checkBeforeRead</code> event with the types <code>Component</code> and <code>Component$CheckBeforeReadEventParameters</code> for the event parameters with an OData V4 Fiori Elements Application and UI5 Version 1.116.</p> <pre><code>import Component, { Component$ChangeBeforeCreateEvent, Component$CheckBeforeReadEvent, Component$UploadButtonPressEvent } from \"cc/spreadsheetimporter/v1_4_2/Component\";\nimport BaseController from \"sap/fe/core/BaseController\";\nimport ExtensionAPI from \"sap/fe/core/ExtensionAPI\";\n\nexport async function openSpreadsheetUploadDialog(this: ExtensionAPI) {\n    const view = this.getRouting().getView();\n    const controller = view.getController() as BaseController;\n    view.setBusyIndicatorDelay(0);\n    view.setBusy(true);\n    const spreadsheetUpload = (await controller.getAppComponent().createComponent({\n        usage: \"spreadsheetImporter\",\n        async: true,\n        componentData: {\n            context: this,\n            activateDraft: true\n        }\n    })) as Component;\n    // event to check before uploaded to app\n    spreadsheetUpload.attachCheckBeforeRead(function (event: Component$CheckBeforeReadEvent) {\n        // example\n        const sheetData = event.getParameter(\"sheetData\") as any;\n        event.getParameters().messages;\n        let errorArray = [];\n        for (const [index, row] of sheetData.entries()) {\n            //check for invalid price\n            for (const key in row) {\n                if (key.endsWith(\"[price]\") &amp;&amp; row[key].rawValue &gt; 100) {\n                    const error = {\n                        title: \"Price too high (max 100)\",\n                        row: index + 2,\n                        group: true,\n                        rawValue: row[key].rawValue,\n                        ui5type: \"Error\"\n                    };\n                    errorArray.push(error);\n                }\n            }\n        }\n        (event.getSource() as Component).addArrayToMessages(errorArray);\n    }, this);\n\n    // event example to prevent uploading data to backend\n    spreadsheetUpload.attachUploadButtonPress(function (event: Component$UploadButtonPressEvent) {\n        //event.preventDefault();\n        //event.getParameter(\"payload\");\n    }, this);\n\n    // event to change data before send to backend\n    spreadsheetUpload.attachChangeBeforeCreate(function (event: Component$ChangeBeforeCreateEvent) {\n        let payload = event.getParameter(\"payload\");\n        // round number from 12,56 to 12,6\n        if (payload.price) {\n            payload.price = Number(payload.price).toFixed(1)\n        }\n        return payload;\n    }, this);\n    spreadsheetUpload.openSpreadsheetUploadDialog();\n    view.setBusy(false);\n}\n</code></pre>"},{"location":"pages/UseCases/","title":"Use Cases","text":""},{"location":"pages/UseCases/#mass-creation","title":"Mass Creation","text":"<p>It is possible to use the Spreadsheet Component with big data sets and spreadsheet files. For example, we timed the upload of 10,000 rows.</p> Scenario Rows Time CAP, Object Page, Draft Mode, Remote CAP Server 10,090 01 Minute 28 seconds CAP, Object Page, Draft Mode, Local CAP Server 10,090 17 seconds CAP, List Report, Draft Mode incl. Draft Activation, Remote CAP Server 10,153 03 Minutes 49 seconds CAP, List Report, Draft Mode incl. Draft Activation, Local CAP Server 10,153 50 seconds <p>Obviously, the time depends on the network speed and the server performance. Also, if you use draft activation, the time will increase as the draft activation takes some time. The times are measured with the default batch size of 1000 rows. Changing the batch did not improve performance in our tests. Setting the batch size too high or disabling the batch upload can lead to memory issues and server errors.</p>"},{"location":"pages/UseCases/#quick-data-entry-for-custom-tables-with-fiori-elements","title":"Quick Data Entry for Custom Tables with Fiori Elements","text":"<p>One of the advantages of the UI5 SpreadsheetUpload component is its ability to quickly add data to custom tables in combination with Fiori Elements.  </p> <p>With the template file in hand, users can simply fill in the necessary data in the Spreadsheet and then use the UI5 SpreadsheetUpload component to upload the data to the custom table in SAP. This can be a huge time-saver for projects that require frequent data entry, such as inventory management or order processing.</p> <p>In addition to simplifying the data entry process, the UI5 SpreadsheetUpload component also allows for advanced data validation and manipulation. For example, developers can define event handlers to check data for errors before it is uploaded or to transform data to conform to the target data model.</p>"},{"location":"pages/UseCases/#data-migration","title":"Data Migration","text":"<p>Data migration is a common scenario where the UI5 SpreadsheetUpload component can be useful. Companies often need to migrate data between systems, and a Spreadsheet is a common format for storing data. The component can simplify the process of uploading large Spreadsheet files containing data for migration. Especially useful is the export feature of tables in Fiori Elements, as the Spreadsheet export files can usually be uploaded again directly.</p> <p>When using the UI5 SpreadsheetUpload component for data migration, there are a few things to keep in mind. First, since the component reads the Spreadsheet files on the frontend, it's important to ensure that the files are properly formatted and contain the correct data before uploading them to the system. Second, since the data is sent in batches, it's important to adjust the batch size accordingly to prevent the batch from becoming too large and causing issues during migration. Finally, it's important to ensure that the data is properly validated and processed on the backend to ensure that it is accurately and securely migrated to the target system.</p>"},{"location":"pages/UseCases/#data-validation-and-reporting","title":"Data Validation and Reporting","text":"<p>In addition to data migration, the UI5 SpreadsheetUpload component can also be useful for data validation and reporting scenarios. Companies may need to validate data in Spreadsheet files before uploading it to the system or generate reports from data in Spreadsheet files. The component can allow users to upload Spreadsheet files containing data for validation or reporting purposes, and the data can be processed and validated on the backend to ensure accuracy and security.</p>"},{"location":"pages/UseCases/#data-entry","title":"Data Entry","text":"<p>In some cases, users may prefer to enter data into a Spreadsheet file rather than using a web form or UI5 app. The UI5 SpreadsheetUpload component can be used to allow users to upload Spreadsheet files containing data for entry into the system. This can be useful in scenarios where users are more comfortable working with Spreadsheets or need to enter large amounts of data quickly.</p>"},{"location":"pages/UseCases/#custom-integrations","title":"Custom Integrations","text":"<p>Finally, the UI5 SpreadsheetUpload component can be used to build custom integrations with other systems that use Spreadsheet files as a data interchange format. For example, the component could be used to allow users to upload Spreadsheet files to a cloud storage service like Dropbox or Google Drive or to integrate with other third-party systems that use Spreadsheet files for data exchange. With the ability to read and write Spreadsheet files in the frontend, the possibilities for custom integrations are nearly endless.</p>"},{"location":"pages/UserDocumentation/","title":"User Documentation","text":"<p>This User Documentation provides a brief overview of the Fiori Element Object Page scenario and uploading Order Items.</p> <p>1. Open the Spreadsheet Upload Dialog</p> <p></p> <p>2. Download the Template</p> <p>To ensure a smooth process without errors, it is recommended to always download a new template. However, if you are confident that the data structure has not changed, you may use a previously downloaded template.</p> <p></p> <p>3. Fill out the template</p> <p>Now, fill the template with the necessary data and save the file.</p> <p></p> <p>4. Upload File to Application</p> <p>Click on the \"Browse\" button to upload the file. If the upload is successful, a message will appear saying \"Upload Successful.\"</p> <p></p> <p>5. Error Dialog</p> <p>During the upload process, various checks are performed in the background. If any errors are encountered, such as unfilled mandatory fields, they will be displayed in the error dialog.</p> <p></p> <p>6. Send Data to Backend</p> <p>If no errors appear, click the \"Upload\" button to send the data to the backend.</p> <p></p>"},{"location":"pages/Development/Docs/","title":"Docs","text":""},{"location":"pages/Development/Docs/#static-site-generator","title":"Static Site Generator","text":"<p>The documentation is set up with MkDocs and Material for MkDocs.</p>"},{"location":"pages/Development/Docs/#usage","title":"Usage","text":""},{"location":"pages/Development/Docs/#configuration","title":"Configuration","text":"<p>The configuration is in the <code>mkdocs.yml</code> file. The pages and images are stored in the <code>docs</code> folder.</p>"},{"location":"pages/Development/Docs/#local-setup","title":"Local Setup","text":"<p>To run the docs locally, you can use Docker. To build the Docker image, run: <pre><code>docker build . -t mkdocs\n</code></pre></p> <p>To run the container:</p> <pre><code>docker run --rm -it -p 8000:8000 -v ${PWD}:/docs squidfunk/mkdocs-material\n</code></pre> <p>or </p> <pre><code>pnpm runDocs\n</code></pre> <p>and then open http://localhost:8000.</p>"},{"location":"pages/Development/Docs/#prod-build","title":"Prod Build","text":"<p>The Documentation is hosted on GitHub Pages and is rebuilt on every push to the <code>main</code> branch using the GitHub Action <code>pushDocs.yml</code> and forcefully pushed to the <code>gh-deploy</code> branch. The current URL is: https://docs.spreadsheet-importer.com/</p>"},{"location":"pages/Development/GettingStarted/","title":"Getting Started","text":""},{"location":"pages/Development/GettingStarted/#quick-setup-with-github-codespaces","title":"Quick Setup with GitHub Codespaces","text":"<p>The <code>postCreateCommand</code> will automatically install all dependencies. This will take a few minutes.</p> <p></p>"},{"location":"pages/Development/GettingStarted/#local-setup","title":"Local Setup","text":""},{"location":"pages/Development/GettingStarted/#requirements","title":"Requirements","text":"<ul> <li>Node.js Versions 16.18.0, 18.12.0, or later</li> </ul>"},{"location":"pages/Development/GettingStarted/#install-required-npm-packages","title":"Install required NPM Packages","text":"<pre><code># Install pnpm if needed\nnpm i -g pnpm\n\n# Install @sap/cds-dk if needed\nnpm i -g @sap/cds-dk\n</code></pre>"},{"location":"pages/Development/GettingStarted/#quick-start","title":"Quick start","text":"<p>To quickly start the test environment, see here. See detailed information below.</p> <pre><code>git clone https://github.com/spreadsheetimporter/ui5-cc-spreadsheetimporter\npnpm i\n# will run `build` and start CAP Server and FE Apps V4 1.108\nnpm start\n</code></pre>"},{"location":"pages/Development/GettingStarted/#setup-ui5-cc-spreadsheetimporter","title":"Setup <code>ui5-cc-spreadsheetimporter</code>","text":"<p>This is the basic setting-up to continue with the next steps.</p> <pre><code># Clone GitHub Repo\ngit clone https://github.com/spreadsheetimporter/ui5-cc-spreadsheetimporter\n\n# Install all packages including for test environment\npnpm i\n</code></pre>"},{"location":"pages/Development/GettingStarted/#start-developing","title":"Start Developing","text":""},{"location":"pages/Development/GettingStarted/#start-cap-server","title":"Start CAP server","text":"<p>The CAP Server is currently very basic and provides an Order Entity with OrderItems. All the apps will consume from this server.</p> <pre><code># Start CAP Server (serves data for all Test Apps)\nnpm run start:server\n</code></pre>"},{"location":"pages/Development/GettingStarted/#build-step","title":"Build Step","text":"<p>The apps get the Spreadsheet Importer Component with the middleware <code>ui5-middleware-ui5</code>. With this, no build step is necessary. To make this work, in the <code>ui5-cc-spreadsheetimporter</code> folder, the dist folder should be empty with only the <code>.gitkeep</code> file. If a build step was executed and the dist folder is not empty, the app will only load the built version.</p>"},{"location":"pages/Development/GettingStarted/#start-ui5-apps","title":"Start UI5 Apps","text":"<p>Under the folder <code>./examples/packages</code> are all the UI5 Apps that are set up for the Consumption of the Custom Control. There are five different apps for different scenarios (OData V2 Fiori Elements, V2 Freestyle, V2 FE Non Draft, V4 FE, V4 FPM). There are currently only with version <code>1.120</code>. For testing, these apps are copied and tested with other maintenance versions. If you want to test with lower maintenance versions, just run this command: <code>npm run copyTestApps</code> This will copy the apps according to this json file.</p> <pre><code># Start Test Apps\nnpm run start:v4fe:108\nnpm run start:v2fe:108\n\n# Alternative with pnpm\npnpm --filter ordersv2fe108 start\npnpm --filter ordersv4fe108 start\n\n# Run other apps after copying\npnpm --filter ordersv2fe96 start\npnpm --filter ordersv2fe84 start\npnpm --filter ordersv2fe71 start\npnpm --filter ordersv4fe96 start\n...\n</code></pre>"},{"location":"pages/Development/GettingStarted/#run-wdi5-tests","title":"Run wdi5 Tests","text":"<p>To run the wdi5 tests, the CAP server and the corresponding app must already be running. You can run the test for the OData V4 UI5 Version 108 with this command:  </p> <pre><code>npm run test:v4fe:108  \n</code></pre> <p>More Info on the wdi5 Tests site.</p>"},{"location":"pages/Development/GettingStarted/#commit-message","title":"Commit Message","text":"<p>To create an automatic changelog, we use the angular commit message guidelines.</p> <p>The commit starts with the <code>type</code> and an optional <code>scope</code> like <code>feat(api)</code>. Possible types are listed here. Scopes can be freely named or omitted.</p> <p>A few examples:</p> <ul> <li><code>feat(api): add new create api for customer</code></li> <li><code>fix(api): edge case when customer is from EU</code></li> <li><code>chore(workflow): changed commiting username</code></li> <li><code>docs: typo in readme</code></li> </ul>"},{"location":"pages/Development/GitHubActions/","title":"GitHub Actions","text":""},{"location":"pages/Development/GitHubActions/#docs","title":"Docs","text":"<p>The GitHub Actions <code>docs</code> is defined in the <code>pushDocs.yml</code> file. The content of the docs is in the <code>docs</code> folder and the config file is <code>mkdocs.yml</code>.</p> <p>In an Ubuntu environment, the workflow will set up Python and install <code>mkdocs-material</code> and <code>mkdocs-minify-plugin</code>. With <code>mkdocs gh-deploy --force</code>, the docs site will be pushed to the <code>gh-docs</code> branch and then published with GitHub Pages to https://docs.spreadsheet-importer.com/.</p>"},{"location":"pages/Development/GitHubActions/#wdi5","title":"wdi5","text":"<p>With wdi5, it is possible to test an E2E Scenaro with UI5 automatically in GitHub Actions. In order to cover as many scenarios as possible, this workflow will cover as many scenarios as possible.</p> <p>To avoid writing a separate configuration and workflow for each scenario, we use the matrix function of GitHub Actions. This means that we only have to define the workflow once, and it is executed as often as necessary.</p> <p>The workflow is defined in the <code>wdi5-test.yml</code> file. The following steps are currently executed in a Ubuntu environment with matrix:</p> <ol> <li>Update Chrome in Ubuntu to the latest version.</li> <li>Checkout the <code>ui5-cc-spreadsheetimporter</code> repo.</li> <li>Install <code>pnpm</code>.</li> <li>Install Node 16.</li> <li>Get the port of the current scenario App (i.e., for <code>ordersv4fe</code>, the port is 8080).<ol> <li>With the port, we can check if the app is running.</li> </ol> </li> <li>Run <code>pnpm i</code>.</li> <li>Build <code>ui5-cc-spreadsheetimporter</code>.</li> <li>Start CAP Server (for all scenarios the same).</li> <li> <p>Start the Scenario App</p> <ol> <li>For example, the matrix variables in <code>start:silent&amp;</code> are used like:  </li> </ol> <p><code>pnpm --filter ${{ matrix.scenario }}${{ matrix.ui5version }} start:silent&amp;</code> which can be: <code>pnpm --filter ordersv4fe108 start</code> 10. Start wdi5 Tests</p> <p>a. First check if the server and app are running.</p> <p>b. Start wdi5 test <code>headless</code> for the current scenario.</p> <p>c. So <code>pnpm --filter ui5-cc-spreadsheetimporter-sample test -- -- --headless ${{ matrix.scenario }} ${{ matrix.ui5version }}</code> will be <code>pnpm --filter ui5-cc-spreadsheetimporter-sample test -- -- ordersv4fe 108</code></p> </li> </ol>"},{"location":"pages/Development/GitHubActions/#start-wdi5-tests","title":"Start wdi5 Tests","text":"<p>Because we use only one <code>wdio-base.conf.js</code>, we must and can only test this one scenario with the names of the scenario. We can pass parameters there when we call the test with <code>\"test\": \"wdio run ./test/wdio-base.conf.js\"</code>. So in GitHub, it will be called with <code>pnpm --filter ui5-cc-spreadsheetimporter-sample test -- -- ordersv4fe 108</code>. With these parameters, we can assign the appropriate port and spec files in the <code>wdio-base.conf.js</code> and read them from <code>testapps.json</code>. We try to ensure that all spec files apply to all scenarios, but certain ones can only be tested with OData V4, for example.</p>"},{"location":"pages/Development/GitHubActions/#release-please-action","title":"Release Please Action","text":"<p>For automatic versioning and changelog generation, we use release-please-action, which allows everything to be done with GitHub Actions. This workflow is defined in release-please.yml.  </p> <p>This workflow will create a Pull Request if a <code>fix:</code> or <code>feat:</code> commit is pushed to the <code>main</code> branch. This Pull Request contains all changes, like the updated version and Changelog. In addition, scripts run to change the version in other files. In this commit, you can see which files are updated with these scripts. For example, in <code>ui5.yaml</code> and the sample apps.  </p> <p>After this Pull Request is merged, the <code>ui5-cc-spreadsheetimporter</code> will be built and published to npm automatically.</p>"},{"location":"pages/Development/SampleApps/","title":"Sample Apps","text":"<p>On the Page Supported Versions you can see which versions are supported.  To make sure all those versions are supported, tests are run with the sample apps. I also make these sample apps available to you on the Live Demo.</p>"},{"location":"pages/Development/SampleApps/#docker","title":"Docker","text":"<p>To make the deployment of the sample apps to the server providing the Live Demo easier, I use Docker. The Dockerfile is available in the examples folder (see Dockerfile). The Dockerfile is created on every push to the main branch (see GitHub Workflow), pushed to the Docker Hub, and then deployed to the server. The Docker image is build for AMD64 and ARM64 platforms.</p>"},{"location":"pages/Development/SampleApps/#how-to-use-the-dockerfile","title":"How to use the Dockerfile","text":""},{"location":"pages/Development/SampleApps/#pull-the-docker-image","title":"Pull the Docker Image","text":"<pre><code>docker pull greatoceandrive/ui5-spreadsheet-importer-examples\n</code></pre>"},{"location":"pages/Development/SampleApps/#run-the-docker-image","title":"Run the Docker Image","text":"<pre><code>docker run -p 4004:4004 greatoceandrive/ui5-spreadsheet-importer-examples\n</code></pre>"},{"location":"pages/Development/SampleApps/#build-the-docker-image-yourself-optional","title":"Build the Docker Image yourself (optional)","text":"<pre><code>git clone https://github.com/spreadsheetimporter/ui5-cc-spreadsheetimporter\ncd ui5-cc-spreadsheetimporter\ndocker build -t ui5-spreadsheet-importer-examples -f examples/Dockerfile .\ndocker run -p 4004:4004 ui5-spreadsheet-importer-examples\n</code></pre>"},{"location":"pages/Development/opa5/","title":"OPA5 Tests","text":"<p>OPA5 Tests are used here to check the more unit-like functionality of the app.</p>"},{"location":"pages/Development/opa5/#setup","title":"Setup","text":"<p>The ui5-test-runner by Arnaud Buchholz is installed and run from the <code>examples</code> folder.  Tests are currently only in OData V4 FE Example.</p>"},{"location":"pages/Development/opa5/#configuration","title":"Configuration","text":"<p>There is no config file. With the ui5-test-runner, only the <code>opaTests.qunit.html</code> is called. </p>"},{"location":"pages/Development/opa5/#run-tests","title":"Run tests","text":"<p>You can run the tests for OData V4 and UI5 Version 108 in the root folder with: <pre><code>npm run start:v4fe:108\nnpm run test:opa:v4fe:108\n</code></pre></p> <p>which will run <code>pnpm --filter ui5-cc-spreadsheetimporter-sample ui5-test-runner --url http://localhost:8080/test/integration/opaTests.qunit.html</code>. All information about the run is in the folder <code>./examples/report</code>. So you can run all the other versions like 96 and 84 with the right port.  </p>"},{"location":"pages/Development/opa5/#github-actions","title":"GitHub Actions","text":"<p>The GitHub Action Workflow will run on every Pull Request push, testing the V4 Versions and is written down in <code>opa5-test.yml</code>.</p> <p>More info at GitHub Actions</p>"},{"location":"pages/Development/wdi5/","title":"wdi5 Tests","text":"<p>The UI5 Custom Control Spreadsheet Upload is used in many different scenarios. To ensure that changes do not affect the function, the basic function and a few other additional functions are tested with wdi5 tests.</p> <p>The overview of which scenarios are covered by wdi5 tests can be found here: wdi5 tests</p>"},{"location":"pages/Development/wdi5/#setup","title":"Setup","text":"<p>wdi5 is used in the test setup in the <code>examples</code> folder in the <code>test</code> folder. As pnpm is used, with <code>pnpm i</code>, all the packages, including <code>wdio-ui5-service</code>, are installed.  </p>"},{"location":"pages/Development/wdi5/#configuration","title":"Configuration","text":"<p>The basic config file is the <code>wdio-base.conf.js</code> file. To avoid having to create a separate configuration file for each scenario, logic is integrated into the file so that the appropriate variables are automatically drawn, for example the port or the appropriate spec files. The data for this is stored in the <code>testapps.json</code> file.</p>"},{"location":"pages/Development/wdi5/#run-tests","title":"Run tests","text":"<p>You can run the tests for OData V2 and V4 UI5 Version 108 in the root folder with: <pre><code>npm run test:v4fe:108\nnpm run test:v2fe:108\n</code></pre></p> <p>which will run <code>pnpm --filter ui5-cc-spreadsheetimporter-sample test -- -- ordersv4fe 108</code>. So, you can run all the other apps like </p> <pre><code>pnpm --filter ui5-cc-spreadsheetimporter-sample test -- -- ordersv4fe 84\n</code></pre>"},{"location":"pages/Development/wdi5/#run-single-spec","title":"Run single spec","text":"<p>You can also run single test specs. You need to go to the <code>examples</code> folder for this. For example, you can run the test spec <code>OpenSpreadsheetUploadDialog</code> with OData V2 FE UI5 Version 96 with:  </p> <pre><code>npm run test -- ordersv2fe  96 --spec OpenSpreadsheetUploadDialog\n</code></pre>"},{"location":"pages/Development/wdi5/#run-headless","title":"Run headless","text":"<p>The wdi5 tests in GitHub Actions must run headless, which is also possible to call locally with: </p> <pre><code>pnpm --filter ui5-cc-spreadsheetimporter-sample test -- -- --headless ordersv4fe 84\n</code></pre>"},{"location":"pages/Development/wdi5/#github-actions","title":"GitHub Actions","text":"<p>As specified in the <code>testapps.json</code> file, the GitHub Action Workflow will run on every Pull Request push, testing scenarios with all current UI5 Maintenance Versions and is written in <code>wdi5-test.yml</code>.</p> <p>More info at GitHub Actions</p>"},{"location":"pages/Pro/deepcreate/","title":"Deep Create","text":"<p>With this feature, you are able to upload a spreadsheet to create multiple entities and their relations.</p>"},{"location":"pages/Pro/deepcreate/#configuration","title":"Configuration","text":"Option Description Details <code>operation</code> Choose which method to use for uploading data string <code>flatSheet</code> Upload data in one sheet or multiple sheets object <code>columns</code> Choose which data to upload object"},{"location":"pages/Pro/deepcreate/#sample-usage","title":"Sample Usage","text":"<pre><code>componentData: {\n    context: this,\n    pro: {\n        operation: \"deepCreate\",\n        deepCreateConfig:{ \n            flatSheet:false,\n            columns : {\n                \"OrderNo\":{\n                    \"order\": 1,\n                    \"data\": \"\"\n                },\n                \"buyer\": {\n                    \"order\": 3,\n                    \"data\": \"\"\n                },\n                \"Items\": {\n                    \"quantity\" : {\n                        \"order\": 2,\n                        \"data\": \"\"\n                    },\n                    \"title\": {\n                        \"order\": 4,\n                        \"data\": \"\"\n                    }\n                },\n                \"Shipping\": {\n                    \"address\" : {\n                        \"order\": 5,\n                        \"data\": \"\"\n                    },\n                }\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"pages/Pro/deepcreate/#operation","title":"operation","text":"<p>default: <code>create</code></p> <p>Currently available options: <code>create</code>, <code>deepCreate</code></p> <p>This option defines the method to use for uploading data. </p>"},{"location":"pages/Pro/deepcreate/#flatsheet","title":"flatSheet","text":"<p>default: <code>false</code></p> <p>This option determines whether you want to upload data in one sheet or multiple sheets. By default, every entity is in a separate sheet. If you want to upload data in one sheet, set this option to <code>true</code>.</p>"},{"location":"pages/Pro/deepcreate/#columns","title":"columns","text":"<p>This option determines which data to upload.</p>"},{"location":"pages/Pro/install/","title":"Installing npm Package from GitHub","text":"<p>To install the <code>@spreadsheetimporter/ui5-cc-spreadsheetimporter-pro</code> package directly from a GitHub repository, you'll need a personal access token from GitHub and configure npm to use it. Below are the steps:</p>"},{"location":"pages/Pro/install/#1-be-a-member-of-the-github-organization","title":"1. Be a member of the GitHub organization ``","text":"<ol> <li>After purchasing the Spreadsheet Importer package, you'll receive an invitation to join the GitHub organization.</li> <li>If you did not receive an invitation, please contact us at marian@marianzeis.de.</li> </ol>"},{"location":"pages/Pro/install/#2-generating-a-personal-access-token-on-github","title":"2. Generating a Personal Access Token on GitHub","text":"<ol> <li>Navigate to GitHub and log in.</li> <li>Click on your profile picture (top right) and choose Settings.</li> <li>In the left sidebar, click on Developer settings.</li> <li>Choose Personal access tokens from the left sidebar.</li> <li>Click Generate new token.</li> <li>Provide a descriptive name for the token in the Note field.</li> <li>Under scopes, select the <code>repo</code> and <code>read:packages</code> checkboxes to allow access to private repositories and packages.</li> <li>Click Generate token.</li> <li>Copy the generated token. Note: This is your only chance to copy the token. If lost, you'll have to create a new one.</li> </ol>"},{"location":"pages/Pro/install/#3-configuring-npm-with-npmrc","title":"3. Configuring npm with <code>.npmrc</code>","text":"<p>More Information: Configuring npm for use with GitHub Packages</p> <p>You can either set up a project-specific <code>.npmrc</code> file or edit the global <code>~/.npmrc</code>.</p>"},{"location":"pages/Pro/install/#for-project-specific-configuration","title":"For Project-specific Configuration","text":"<ol> <li>Go to your project directory.</li> <li>Create or open the <code>.npmrc</code> file.</li> </ol> <pre><code>@spreadsheetimporter:registry=https://npm.pkg.github.com\n//npm.pkg.github.com/:_authToken=YOUR_PERSONAL_ACCESS_TOKEN\n</code></pre> <p>Replace YOUR_PERSONAL_ACCESS_TOKEN with the token you generated in step 2.</p> <p>Now you can install the package:  </p> <pre><code>npm install @spreadsheetimporter/ui5-cc-spreadsheetimporter-pro\n</code></pre>"},{"location":"pages/Pro/install/#for-global-configuration","title":"For Global Configuration","text":"<ol> <li>Open the <code>~/.npmrc</code> file.</li> <li>Add the following line:</li> </ol> <pre><code>@spreadsheetimporter:registry=https://npm.pkg.github.com\n</code></pre> <ol> <li>Save the file.</li> </ol> <p>Now you can install the package:</p> <pre><code>npm install @spreadsheetimporter/ui5-cc-spreadsheetimporter-pro\n</code></pre>"},{"location":"pages/Pro/install/#4-using-the-package","title":"4. Using the Package","text":"<p>Now you can start using the package in your project. For more information, please refer to the Getting Started Page.</p> <p>The documentation for pro features is here:</p> <ul> <li>Spreadsheet Download</li> </ul>"},{"location":"pages/Pro/spreadsheetdownload/","title":"Spreadsheet Download","text":"<p>This feature downloads data from the backend and converts it to a Spreadsheet file. In the future, the feature will allow users to upload data in order to update the data in the backend. The main difference between this feature and the integrated Spreadsheet Download is that it can download data from multiple entities at once.</p> <p>For example, if you have Orders and OrderItems, you can download both entities at once and the data will be structured in the Spreadsheet file in a way that allows for easy data updates and re-uploading. It is also possible to recursively download data from multiple entities indefinitely.</p> <ul> <li>Orders<ul> <li>OrderItems<ul> <li>Info</li> </ul> </li> <li>ShippingInfos</li> </ul> </li> </ul> <p>This means that you can download all Orders, including the OrderItems, ShippingInfos, and the Info of the OrderItems.</p>"},{"location":"pages/Pro/spreadsheetdownload/#configuration","title":"Configuration","text":"Option Description Details <code>addKeysToExport</code> Adds hidden keys to the export object <code>filename</code> Defines the filename for the export XLSX file object <code>deepExport</code> Also exports sibling entities object <code>deepLevel</code> Defines the level of sibling entities to export object <code>showOptions</code> Shows options dialog for users to change configurations object"},{"location":"pages/Pro/spreadsheetdownload/#sample-usage","title":"Sample Usage","text":"<p>The configuration is done in the <code>pro</code> section of the component data.</p> <pre><code>componentData: {\n    context: this,\n    activateDraft: true,\n    pro: {\n        spreadsheetExportConfig: {\n            deepLevel: 2,\n            deepExport: true,\n            addKeysToExport: true,\n            filename: 'MyExport'\n        }\n    }\n}\n</code></pre>"},{"location":"pages/Pro/spreadsheetdownload/#addkeystoexport","title":"addKeysToExport","text":"<p>default: <code>false</code></p> <p>This option adds hidden keys to the export, such as GUIDs that are usually hidden in the UI. These keys are necessary for updating data from the file in the future.</p>"},{"location":"pages/Pro/spreadsheetdownload/#filename","title":"filename","text":"<p>default: Entity Name of Root Entity</p> <p>This option defines the filename for the export XLSX file.</p>"},{"location":"pages/Pro/spreadsheetdownload/#deepexport","title":"deepExport","text":"<p>default: <code>false</code></p> <p>This option determines whether sibling entities should be exported as well.</p>"},{"location":"pages/Pro/spreadsheetdownload/#deeplevel","title":"deepLevel","text":"<p>default: <code>1</code></p> <p>This option defines how deep sibling entities should be exported.</p>"},{"location":"pages/Pro/spreadsheetdownload/#showoptions","title":"showOptions","text":"<p>default: <code>true</code></p> <p>This option determines whether the options dialog should be shown to the user.</p>"},{"location":"pages/Pro/spreadsheetdownload/#api","title":"API","text":""},{"location":"pages/Pro/spreadsheetdownload/#triggerspreadsheetdownload","title":"triggerSpreadsheetDownload","text":"<p>This method triggers the Spreadsheet Download without the need to open the spreadsheet upload dialog. The input parameter for <code>triggerSpreadsheetDownload</code> is the same as the configuration for the <code>spreadsheetExportConfig</code> in the <code>pro</code> section of the component data. You can overwrite the configuration from the component data by passing the configuration to the <code>triggerSpreadsheetDownload</code> method.</p> <pre><code>download: async function () {\n    this.spreadsheetUpload = await this.editFlow\n        .getView()\n        .getController()\n        .getAppComponent()\n        .createComponent({\n            usage: \"spreadsheetImporter\",\n            async: true,\n            componentData: {\n                context: this,\n                activateDraft: true,\n                pro: {\n                    spreadsheetExportConfig: {\n                        deepLevel: 1,\n                        deepExport: true,\n                        addKeysToExport: true\n                    }\n                }\n            }\n        });\n    this.spreadsheetUpload.triggerSpreadsheetDownload({\n        deepExport: true,\n        addKeysToExport: true\n    });\n}\n</code></pre>"}]}